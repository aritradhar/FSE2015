%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: dataflow.pdf
%%Creator: Adobe Acrobat 10.1.12
%%For: Aritra
%%CreationDate: 03-Nov-14, 1:26:23 AM
%%BoundingBox: -1 0 400 507
%%HiResBoundingBox: 0 0 399.2630 506.9163
%%CropBox: 0 0 399.2630 506.9163
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1091 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2014-09-25T21:25:41+05:30"
   xmp:CreatorTool="Microsoft® PowerPoint® 2013"
   xmp:ModifyDate="2014-09-25T21:27:29+05:30"
   xmp:MetadataDate="2014-09-25T21:27:29+05:30"
   pdf:Producer="Microsoft® PowerPoint® 2013"
   xmpMM:DocumentID="uuid:81f1c6a7-1dbb-4734-8f50-59166f32ffc9"
   xmpMM:InstanceID="uuid:aad82939-cb21-4dec-a72a-32d292578ff7">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Aritra Dhar</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">PowerPoint Presentation</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -506.916 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-5 0 mo
-1.52588e-5 506.916 li
399.263 506.916 li
399.263 0 li
cp
clp
gsave
-.613937 507.212 mo
399.386 507.212 li
399.386 -.788029 li
-.613937 -.788029 li
-.613937 507.212 li
clp
-249.614 525.212 mo
710.386 525.212 li
710.386 -14.788 li
-249.614 -14.788 li
-249.614 525.212 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
gsave
-12.134 512.132 mo
409.552 512.132 li
409.552 -.508049 li
-12.134 -.508049 li
-12.134 512.132 li
clp
40.5137 233.783 mo
261.641 233.783 li
261.641 131.255 li
40.5137 131.255 li
cp
/1 
[/DeviceCMYK] /CSA add_res
level3{
gsave
[1.42341 0 0 -1.424 -12.134 512.132 ]ct
<<
/PatternType 2
/Shading
/0 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [9.6404 413.38 149.67 170.84 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~#6Or+#6Or+#6Or+#6Or+"p4i*"p4i*"p4i*"p4i*"p4i*"p4i*"p4i*"p+c)"p+c)"TeZ("TeZ("TeZ(
"TeZ("TeZ("TeZ("TeZ("TeZ("TeZ("TeZ("9JQ'"9AK&"9AK&"9AK&"9AK&"9AK&"9AK&"9AK&"9AK&
!s&B%!s&B%!s&B%!s&B%!s&B%!rr<$!rr<$!rr<$!rr<$!WW3#!WW3#!WW3#!WW3#!WW3#!WW3#!WW3#
!WW3#!<<*"!<<*"!<<*"!<<*"!<<*"!<<*"!<<*"zzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~&I8C;&I8C;&I8C;&I8C;&-r::&-r::&-i49&-i49&-i49%gN+8%gN+8%gN+8%gN+8%gN+8%L3"7%L3"7
%L3"7%L3"7%L)q6%0ch5%0ch5%0ch5%0ch5%0ch5%0ch5$jH_4$jH_4$jH_4$jH_4$jH_4$jH_4$O$P2
$O$P2$O$M1$O$M1$O$M1$O$M1$O$M1$3^D0$3^D0$3^D0$3^D0$3^D0$3^D0$3^D0#m:5.#m:5.#m:5.
#m:5.#m:5.#m:5.#m:5.#Qt,-#Qt,-#Qt,-#Qt,-#Qt,-#Qt,-#Qt,-#6Y#,#6Or+#6Or+#6Or+#6Or+
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~#6Or+#6Or+#6Or+#6Or+#6Y#,#Qt,-#Qt,-#Qt,-#Qt,-#Qt,-#Qt,-#Qt,-#m:5.#m:5.#m:5.#m:5.
#m:5.#m:5.#m:5.$3^D0$3^D0$3^D0$3^D0$3^D0$3^D0$3^D0$O$M1$O$M1$O$M1$O$M1$O$M1$O$P2
$O$P2$jH_4$jH_4$jH_4$jH_4$jH_4$jH_4%0ch5%0ch5%0ch5%0ch5%0ch5%0ch5%L)q6%L3"7%L3"7
%L3"7%L3"7%gN+8%gN+8%gN+8%gN+8%gN+8&-i49&-i49&-i49&-r::&-r::&I8C;&I8C;&I8C;&I8C;
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzz!<<*"!<<*"!<<*"!<<*"!<<*"!<<*"!<<*"!WW3#!WW3#!WW3#!WW3#!WW3#!WW3#!WW3#!W
W3#!rr<$!rr<$!rr<$!rr<$!s&B%!s&B%!s&B%!s&B%!s&B%"9AK&"9AK&"9AK&"9AK&"9AK&"9AK&"9
AK&"9AK&"9JQ'"TeZ("TeZ("TeZ("TeZ("TeZ("TeZ("TeZ("TeZ("TeZ("TeZ("p+c)"p+c)"p4i*"p
4i*"p4i*"p4i*"p4i*"p4i*"p4i*#6Or+#6Or+#6Or+#6Or+~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.22941 .38039 .5 .61961 .77059 ]
/Encode [1 0 1 0 1 0 1 0 1 0 1 0 ]
>>
>> /Gradient add_res /0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1.42341 0 0 -1.424 -12.134 512.132 ]ct
/0 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzz!<E3%!<N<(!WiH+!s8W-"9\i1"9\l3"U,&6"pP89#6tJ>#RC\B#mgqG$4@4L$k*
OR%1NdW%hB0^&.f?_%h9'Y%1N^S$k!FN$47+H#mgkC#RCY?#6kA:"pP57"U,&4"9\i1"9S`.!s8W,!Wi
E)!<E3%!<<*"zzzzzzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3&!WiE)!WiE*!s8W-!s8W."9\i1"9er4"U,&5"pP89"pP;;
#6tJ<"pP89"pG/6"U,&5"9\i1"9\f/!s8W-!s8T+!WiE)!WiB'!<E3%!<E0#zzzzzzzzzzzzzzzzzzz!
!!!!~>
0 0 ]
>>
9.6404 413.38 149.67 170.84 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
40.5137 233.783 mo
261.641 233.783 li
261.641 131.255 li
40.5137 131.255 li
cp
1 /0 /CSD get_res sepcs
1 sep
.75075 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
gsave
[1.42341 0 0 -1.424 -12.134 512.132 ]ct
@
grestore newpath
%ADOBeginSubsetFont: PBAAAA+Consolas,Bold Initial
ct_T42Dict begin
-0.473 -0.293 0.699 0.969
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+Consolas,Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f324a82d607000000cc000000606376
74202ef908b60000012c0000050e6670676d20a426c00000063c00000910
676c7966dc63fb5e00006a980000234868656164ec3b96f700000f4c0000
003668686561091d07ca00000f8400000024686d7478ff1c274700000fa8
000023a26c6f63613dd335570000334c000015626d617870148b10ff0000
48b0000000206e616d65fb1e395e000048d0000011707072657029c4764f
00005a4000001058676469720000000000000000000000000003046602bc
00050008059905330000011e05990533000003d000c202000809020b0709
020204030204e10002ff4000fcff00000009000000004d53202000200000
fb0105f1fdf1015e075c02026000019fdfd7000003f8051b000000200003
0000076c0337fe5c0000000000000000000000000000006e007e009100a9
00bf00e101130138016901870087009400bb00c200c600d900e300ff0114
014801600184000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000051b00160000ffeafe6afe85ff2905f2fee5fe5c
0617ff0605d705e503f800160000ffea05850013fe73ffe9fe6afed9ff29
04cffe5cff000666ff29fff002390011051b00160000ffea047b0016ff29
fff0056a058505b205d3034cfe1500000000079e00000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000005e0069006f0048008300850086008700880089
008d0078007a007d0086007d008500910092009500970098009b00a300a4
008e009a008b008c008e0091009c008e0099009a009b0088009700a600a8
00a900aa00ac00ad00ae00b600b800ba00bb00bc00bd00c100c200a000ac
00ae00a800ab009f00a000a600a800aa00ac00ae00af00b000b200b300b4
00b600b700bb00bc00be00bf00c000c100c300c400c500c700c900ca00cb
00cc00cd00ce00cf00ba00bc00c100c300c500c600c700ca00cb00cc00cd
00ce00cf00b400b600b800b900ba00bb00bc00bd00be00bf00c000c100c2
00c300c400c500c700c800c900ca00cb00cc00cd00ce00cf00d000d100d3
00d500d600d700d800d900da00db00dc00dd00de00df00e000e100e300e5
00e600e800ea00ee00f000f100f300f400d100d300d400d500d700d800d9
00e100e500e600ec00d000d100d300d400d500d600d700d900da00db00dc
00dd00de00df00e000e300ed011301120113012b0135012b013301370138
0139013f01400168017d01870188007f0085008b008b0094009d008f0092
0094009c00a2009400a0009200a500a600a700aa00a600a800aa00ab00b2
00a400b000aa00ac00ae00af00b100b200af00b000b200b300b500b600bc
00bd00bb00c300bf00c000c100b900bc00c100c200c300c700c600c400c5
00ca00cb00cd00ce00cf00c400c500c600cb00cc00cd00ce00cf00ca00cc
00cd00ce00cf00d100d200d300d500d100d300d500d600d700d800d900db
00dc00dd00d000d100d300d500d700d800d900da00db00dd00e300e400eb
00ec00ed00ee00d600d900db00df00e100e300e700e800ec00d900de00df
00e000e100e300e400e500e600e700e900ea00eb00ec00ed00ee00f000f1
00f200f300de00df00e100e200e300e400e500e700e800e900ea00eb00ec
00ed00ee00ef00f000f100f400f600f700fa00fc00fe0100010201040105
010800f300fe010000f400f500f600f700f800f900fa00fb00fc00fd00fe
00ff01000102010301040105010601080109010a00f100f200f300f400f5
00f600f700f800f900fa00fb00fc00fd00fe00ff01000102010401050106
0108010e010f01100111011201130123010a010c010d011201130116011a
011b0121012501270150013d0131013601390149014a012f013501370139
013a013e013f01400142014301440147014a014e01510152017101680170
017401750185000000000000000000000000000000000000000000000000
0096000000000000000000000000000000000000026201cc02f8fdfe075c
000000000000000005850593033d024c0000fff0005c005c008efe600000
00070636060b000a05f7000b05430010051b02cefff601d306dc000b0617
0415fff4000040465f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948
47464544434241403f3e3d3c3b3a39383736352f2e2d2c2826252423221f
181411100f0d0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b004
2651582320b00d44235921212d2c20204518684420b001602045b0467668
8a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b028
2370b101283e01b0282370b10228453ab10200080d2d2c2045b003254561
64b050515845441b2121592d2c2045b0004360442d2c01b00643b0074365
0a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58
b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c
234445b02b23442d2c4b525845441b2121592d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b08051580c
6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648b
b81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c
4523456023456023456023766818b08062202d2cb00426b00426b00425b0
042545234520b003266062636820b0032661658a2344442d2c2045b00054
58b040442045b04061441b2121592d2c45b1302f4523456160b001606944
2d2c4b5158b02f2370b01423421b2121592d2c4b515820b0032545695358
441b2121591b2121592d2c45b01443b0006063b0016069442d2cb02f4544
2d2c452320458a60442d2c45234560442d2c4b235158b90033ffe0b13420
1bb3330034005944442d2cb0164358b00326458a586466b01f601b64b020
606620581b21b04059b001615923586559b02923442310b029e01b212121
2121592d2cb0164358b004254564b020606620581b21b04059b001612358
6559b0292344b00425b00725082058021b0359b0052510b004252046b004
2523423cb0072510b006252046b00425b0016023423c2058011b0059b005
2510b00425b029e0b0072510b00625b029e0b00425b00725082058021b03
59b00425b003254348b00625b00325b0016043481b215921212121212121
2d2cb0164358b004254564b020606620581b21b04059b0016123581b6559
b0292344b00525b00825082058021b0359b0042510b005252046b0042523
423cb00425b0072508b0072510b006252046b00425b0016023423c205801
1b0059b0042510b00525b029e0b02920456544b0072510b00625b029e0b0
0525b00825082058021b0359b00525b003254348b00425b0072508b00625
b00325b0016043481b2159212121212121212d2c02b00425202046b00425
2342b0052508b003254548212121212d2c02b0032520b0042508b0022543
482121212d2c452320451820b00050205823652359236820b040505821b0
4059235865598a60442d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c208a08234b538a4b515a5823381b2121592d2c0020
b200400325b0062649618b3812342d2c014623466023466123201020468a
61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b2159
2d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123018851
b1400188535a58b910000020885458b202010243604259b12401885158b9
20000040885458b2020202436042b12401885458b2022002436042004b01
4b5258b2020802436042591bb940000080885458b202040243604259b940
00008063b80100885458b202080243604259b94000010063b80200885458
b202100243604259b94000020063b80400885458b2024002436042595959
59592d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d000100000005570af30978115f0f
3cf50009080000000000bbe31b2800000000cf6ada67fc31fda1059a07c0
0001000800020000000000000001000005f1fdf1015e0466fc31fe51059a
0001000000000000000000000000000007210466004e0466000000000000
046600000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000466002d00000000
046600250000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000466006d0466008b000000000466004c04660066046600000466004c
0000000004660091000000000000000000000000000000000466008b0000
00000000000000000000046600b40466009c0466003b0466008900000000
000000000466002100000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000046600000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000466009100000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000466
0048046600480466007b0000000000000000000000000000000000000000
0000000000000000000000000466007b0466007900000000000000000000
000000000000000000000000000000000000000000000466007900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000004660054
000000000000000000000000046600a00000000000000000000000000466
005200000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000046600d3046600df0466017f
0466016d0000000000000000000000000466019800000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000004660110046600e50466
0110046600e5000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000046600e3000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000046600a60466012f046600ee0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000046600a60466012f046600ee0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000466008500000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000046600f3
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000466
00fc00000000046601070000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000046601130000000000000000
000000000466011404660103046600ff0000000000000000000000000466
00f200000000000000000000000000000000000000000000000000000000
0000000000000000046600e8046601190000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
046600f30000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000046600fe000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000007f007f007f
007f007f007f007f007f007f007f007f007f007f007f007f007f00f800f8
015501550155015501550155015501550155015501550155015501550155
015501550155015501550155015501550155015501550155015501550155
015501550155015501550155015501550155015501550155015501550155
015501550155015501550155015501550155015501550155015501550155
015501550155015501550155015501550155015501550155015501550155
015501550155015501550155015501550155015501550155015501550155
015501550155015501550155015501550155015501550155015501550155
0155015501550155015501550155015501e50248024802b603280394048d
048d04fd04fd04fd04fd04fd054f054f054f054f05ae064206a006f306f3
06f307750775077507750775077507750775077507750775077507750775
077507750775077507750775077507750775077507750775077507750775
07750775077507cf07cf07cf07cf07cf07cf07cf07cf07cf07cf07cf07cf
07cf07cf07cf07cf07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb
07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb
07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb
07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb07fb
07fb07fb07fb07fb07fb07fb07fb085308ba091a091a091a091a091a091a
091a091a091a095309c609c609c609c609c609c609c609c609c60a100a10
0a100a100a100a100a100a100a100a100a100a100a100a100a100a100a64
0a640a640a640aa90aa90aa90aa90b120b120b120b120b120b120b120b12
0b120b120b120b120b120b120b120b120b120b120b120b120b120b120b12
0b120b120b120b120b120b120b120b120b120b120b120b120b460b9d0be9
0c150c150c150c150c4f0c4f0c4f0c4f0c4f0c4f0c4f0c4f0c4f0c4f0c4f
0c4f0c4f0c4f0c4f0c4f0c4f0c4f0c4f0c4f0c4f0c4f0c4f0c4f0c4f0c4f
0c4f0c4f0c4f0c4f0c4f0c7d0cac0cb40cbc0cbc0cbc0cbc0cbc0cbc0cbc
0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc
0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc
0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc
0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc
0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc
0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc
0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc
0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc
0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc
0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc
0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc
0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc
0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc0cbc
0cbc0cbc0cbc0cbc0cbc0ce50ce50ce50ce50ce50ce50ce50ce50ce50ce5
0ce50ce50ce50ce50ce50ce50ce50ce50ce50ce50ce50ce50ce50ce50ce5
0ce50ce50ce50ce50ce50ce50ce50ce50ce50ce50ce50ce50ce50ce50ce5
0ce50ce50ce50ce50ce50ce50ce50ce50ce50ce50ce50ce50ce50ce50ce5
0ce50cee0cf70d000d000d000d000d000d000d000d000d000d000d000d00
0d000d200d540d880d880d880d880d880d880d880d880d880d880d880d88
0d880d880d880d880d880d880d880d880d880d880da80da80da80da80da8
0da80da80da80da80da80da80da80da80da80da80da80da80da80da80da8
0da80da80da80da80da80da80da80da80da80da80da80da80da80da80da8
0da80da80da80da80da80da80da80da80da80da80da80da80da80da80da8
0da80da80da80da80da80da80da80da80da80da80da80da80da80da80da8
0da80da80da80da80da80da80da80da80da80da80da80da80da80da80da8
0da80da80da80da80da80da80da80da80da80da80da80da80da80da80da8
0da80da80da80da80da80da80da80da80da80da80da80da80da80da80da8
0da80da80da80da80da80da80da80da80da80da80da80da80da80da80da8
0da80da80da80da80da80da80da80da80da80da80da80da80da80da80de9
0de90de90de90de90de90de90de90de90de90de90de90de90de90de90de9
0de90de90de90de90de90de90de90de90de90de90de90de90de90de90de9
0de90de90de90de90de90de90de90de90de90de90de90de90de90de90de9
0de90de90de90de90de90de90de90de90de90de90de90de90de90de90de9
0de90de90de90de90de90de90de90de90de90de90de90de90de90de90de9
0de90de90de90de90de90de90de90de90de90de90de90de90de90de90de9
0de90de90de90de90de90de90de90de90de90de90de90de90de90de90de9
0de90de90de90de90de90de90de90e370e370e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a
0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0e7a0ee30ee30ee3
0ee30f320f880fe40fe40fe40fe410961096109610961096109610961096
1096109610db111811181118111811181118111811181118111811181118
111811181118111811181118111811181118111811181118111811181118
111811181118111811181118111811181118111811181118111811181118
111811181118111811181118111811181118111811181118111811181118
111811181118111811181118111811181118111811181118111811181118
116211621162116211621162116211621162116211621162116211621162
116211621162116211621162116211621162116211621162116211621162
1162116211621162116211a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a411a411a411a411a411a411a411a411a411a411a411a411a4
11a411a411a40000000100000ab0006100040014000200020010002f0060
000009631058000100010000002d02220000000300000000006400000000
000300000001001000640000000300000002000805de0000000300000003
003005b60000000300000004001a05cc0000000300000005001805e60000
000300000006001a05fe0000000300000007007806180000000300000008
002a000e000000030000000900200690000000030000000a055200640000
00030000000b005606b0000000030000000c002a0706000000030000000d
02980730000000030000000e006c09c8000100000000000000320a340001
00000000000100080a66000100000000000200040d230001000000000003
00180d0f0001000000000004000d0d1a0001000000000005000c0d270001
000000000006000d0d330001000000000007003c0d400001000000000008
00150a3b000100000000000900100d7c000100000000000a02a90a660001
00000000000b002b0d8c000100000000000c00150db7000100000000000d
014c0dcc000100000000000e00360f180003000104090000006400000003
000104090001001000640003000104090002000805de0003000104090003
003005b60003000104090004001a05cc0003000104090005001805e60003
000104090006001a05fe0003000104090007007806180003000104090008
002a000e000300010409000900200690000300010409000a055200640003
00010409000b005606b0000300010409000c002a0706000300010409000d
02980730000300010409000e006c09c800a9002000320030003100340020
004d006900630072006f0073006f0066007400200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e0043006f
006e0073006f006c00610073002000690073002000610069006d00650064
00200066006f0072002000750073006500200069006e002000700072006f
006700720061006d006d0069006e006700200065006e007600690072006f
006e006d0065006e0074007300200061006e00640020006f007400680065
0072002000630069007200630075006d007300740061006e006300650073
002000770068006500720065002000610020006d006f006e006f00730070
006100630065006400200066006f006e0074002000690073002000730070
0065006300690066006900650064002e00200041006c006c002000630068
006100720061006300740065007200730020006800610076006500200074
00680065002000730061006d0065002000770069006400740068002c0020
006c0069006b00650020006f006c00640020007400790070006500770072
00690074006500720073002c0020006d0061006b0069006e006700200069
00740020006100200067006f006f0064002000630068006f006900630065
00200066006f007200200070006500720073006f006e0061006c00200061
006e006400200062007500730069006e00650073007300200063006f0072
0072006500730070006f006e00640061006e00630065002e002000540068
006500200069006d00700072006f007600650064002000570069006e0064
006f0077007300200066006f006e007400200064006900730070006c0061
007900200061006c006c006f007700650064002000610020006400650073
00690067006e00200077006900740068002000700072006f0070006f0072
00740069006f006e007300200063006c006f00730065007200200074006f
0020006e006f0072006d0061006c00200074006500780074002000740068
0061006e00200074007200610064006900740069006f006e0061006c0020
006d006f006e006f00730070006100630065006400200066006f006e0074
00730020006c0069006b006500200043006f00750072006900650072002e
0020005400680069007300200061006c006c006f0077007300200066006f
00720020006d006f0072006500200063006f006d0066006f007200740061
0062006c0079002000720065006100640069006e00670020006f00660020
0065007800740065006e006400650064002000740065007800740020006f
006e002000730063007200650065006e002e0020004f00700065006e0054
00790070006500200066006500610074007500720065007300200069006e
0063006c007500640065002000680061006e00670069006e00670020006f
00720020006c0069006e0069006e00670020006e0075006d006500720061
006c0073003b00200073006c00610073006800650064002c00200064006f
007400740065006400200061006e00640020006e006f0072006d0061006c
0020007a00650072006f0073003b00200061006e006400200061006c0074
00650072006e006100740069007600650020007300680061007000650073
00200066006f0072002000610020006e0075006d0062006500720020006f
00660020006c006f00770065007200630061007300650020006c00650074
0074006500720073002e00200054006800650020006c006f006f006b0020
006f006600200074006500780074002000630061006e0020006200650020
00740075006e0065006400200074006f00200070006500720073006f006e
0061006c0020007400610073007400650020006200790020007600610072
00790069006e006700200074006800650020006e0075006d006200650072
0020006f00660020006200610072007300200061006e0064002000770061
007600650073002e004d006900630072006f0073006f00660074003a0020
0043006f006e0073006f006c0061007300200042006f006c006400560065
007200730069006f006e00200035002e003300340043006f006e0073006f
006c00610073002d0042006f006c00640043006f006e0073006f006c0061
007300200069007300200061002000740072006100640065006d00610072
006b0020006f006600200074006800650020004d006900630072006f0073
006f00660074002000670072006f007500700020006f006600200063006f
006d00700061006e006900650073002e004c007500630028006100730029
002000640065002000470072006f006f00740068007400740070003a002f
002f007700770077002e006d006900630072006f0073006f00660074002e
0063006f006d002f007400790070006f006700720061007000680079002f
006300740066006f006e007400730068007400740070003a002f002f0066
006f006e007400660061006200720069006b002e0063006f006d0059006f
00750020006d006100790020007500730065002000740068006900730020
0066006f006e00740020006100730020007000650072006d006900740074
006500640020006200790020007400680065002000450055004c00410020
0066006f00720020007400680065002000700072006f0064007500630074
00200069006e002000770068006900630068002000740068006900730020
0066006f006e007400200069007300200069006e0063006c007500640065
006400200074006f00200064006900730070006c0061007900200061006e
00640020007000720069006e007400200063006f006e00740065006e0074
002e00200059006f00750020006d006100790020006f006e006c00790020
00280069002900200065006d006200650064002000740068006900730020
0066006f006e007400200069006e00200063006f006e00740065006e0074
0020006100730020007000650072006d0069007400740065006400200062
0079002000740068006500200065006d00620065006400640069006e0067
0020007200650073007400720069006300740069006f006e007300200069
006e0063006c007500640065006400200069006e00200074006800690073
00200066006f006e0074003b00200061006e006400200028006900690029
002000740065006d0070006f0072006100720069006c007900200064006f
0077006e006c006f006100640020007400680069007300200066006f006e
007400200074006f002000610020007000720069006e0074006500720020
006f00720020006f00740068006500720020006f00750074007000750074
002000640065007600690063006500200074006f002000680065006c0070
0020007000720069006e007400200063006f006e00740065006e0074002e
0068007400740070003a002f002f007700770077002e006d006900630072
006f0073006f00660074002e0063006f006d002f007400790070006f0067
00720061007000680079002f0066006f006e00740073002f006400650066
00610075006c0074002e0061007300700078a92032303134204d6963726f
736f667420436f72706f726174696f6e2e20416c6c205269676874732052
657365727665642e436f6e736f6c61732069732061696d656420666f7220
75736520696e2070726f6772616d6d696e6720656e7669726f6e6d656e74
7320616e64206f746865722063697263756d7374616e6365732077686572
652061206d6f6e6f73706163656420666f6e742069732073706563696669
65642e20416c6c2063686172616374657273206861766520746865207361
6d652077696474682c206c696b65206f6c64207479706577726974657273
2c206d616b696e67206974206120676f6f642063686f69636520666f7220
706572736f6e616c20616e6420627573696e65737320636f72726573706f
6e64616e63652e2054686520696d70726f7665642057696e646f77732066
6f6e7420646973706c617920616c6c6f77656420612064657369676e2077
6974682070726f706f7274696f6e7320636c6f73657220746f206e6f726d
616c2074657874207468616e20747261646974696f6e616c206d6f6e6f73
706163656420666f6e7473206c696b6520436f75726965722e2054686973
20616c6c6f777320666f72206d6f726520636f6d666f727461626c792072
656164696e67206f6620657874656e6465642074657874206f6e20736372
65656e2e204f70656e5479706520666561747572657320696e636c756465
2068616e67696e67206f72206c696e696e67206e756d6572616c733b2073
6c61736865642c20646f7474656420616e64206e6f726d616c207a65726f
733b20616e6420616c7465726e61746976652073686170657320666f7220
61206e756d626572206f66206c6f77657263617365206c6574746572732e
20546865206c6f6f6b206f6620746578742063616e2062652074756e6564
20746f20706572736f6e616c2074617374652062792076617279696e6720
746865206e756d626572206f66206261727320616e642077617665732e4d
6963726f736f66743a20436f6e736f6c617320426f6c6456657273696f6e
20352e3334436f6e736f6c61732d426f6c64436f6e736f6c617320697320
612074726164656d61726b206f6620746865204d6963726f736f66742067
726f7570206f6620636f6d70616e6965732e4c7563286173292064652047
726f6f74687474703a2f2f7777772e6d6963726f736f66742e636f6d2f74
79706f6772617068792f6374666f6e7473687474703a2f2f666f6e746661
6272696b2e636f6d596f75206d617920757365207468697320666f6e7420
6173207065726d6974746564206279207468652045554c4120666f722074
68652070726f6475637420696e207768696368207468697320666f6e7420
697320696e636c7564656420746f20646973706c617920616e6420707269
6e7420636f6e74656e742e20596f75206d6179206f6e6c79202869292065
6d626564207468697320666f6e7420696e20636f6e74656e742061732070
65726d69747465642062792074686520656d62656464696e672072657374
72696374696f6e7320696e636c7564656420696e207468697320666f6e74
3b20616e6420286969292074656d706f726172696c7920646f776e6c6f61
64207468697320666f6e7420746f2061207072696e746572206f72206f74
686572206f75747075742064657669636520746f2068656c70207072696e
7420636f6e74656e742e687474703a2f2f7777772e6d6963726f736f6674
2e636f6d2f7479706f6772617068792f666f6e74732f64656661756c742e
61737078413c028600640285005500000285002002850040028500600285
0080028500a0028500c0028500e0028500080009028300640284005500d0
0284000100d0028200e002820002008f02820001009f0281000100600281
000102800064027f00550040027f0070027f00020000027f0030027f0060
027f0003027db2644155b8027eb241ff1f4156027b0064027c0055000002
7c0030027c0060027c00030070027c00a0027c00d0027c0003002f027c00
5f027c000200cf027c00ff027c00020000027c0030027c0060027c000302
790064027a00550030027a0070027a00020070027a00b0027a00f0027a00
03004f027a00cf027a000200df02780001008002780001005f0278000100
000278000102760064027700550000027700010030027700c00277000200
0002770010027700a002774077037201411f6f032f1f6e02411f692d6855
672d6655652d6455632d6255613260551f602f60025f325e558f5a01505a
01ef5a01105a305a605a03562d5555c055018055d05502542d5355cf5301
b053018f530110537053028f53016053705302522d5155502d4f55604f01
1f4f01442d4355422d415540b8026eb2090f46b9026c026bb2321f40b802
6bb3090f46c0bb0273000100400271b331374640b80271b21c2146b8024b
b220231fb8024ab220231fb80249b220231fb80248b21f261fb80247b21f
261fb80246b21f261fb80245b21e291fb80244b21e291fb80243b21e291f
b80242b21e291fb80241b21e291fb80240b21e291fb8023fb21e291fb802
3eb21e291fb8023db21e291fb8023cb21e291fb8023bb21e291fb8023ab2
1e291fb80239b21e291fb80238b21e291fb80237b21e291fb80236b21e29
1fb80235b21e291fb80234b21e291fb80233b21e291fb80232b21e291fb8
0231b21e291fb80230b21e291fb8022fb21e291fb8022eb21d311fb8022d
b21d311fb8022cb21d311fb8022bb21d311fb8022ab21d311fb80229b21d
311fb80228b21d311fb80227b21d311fb80226b21d311fb80225b21d311f
b80224b21d311fb80223b21d311fb80222b21d311fb80221b21d311fb802
20b21d311fb8021fb21d311fb8021eb21d311fb8021db21d311fb8021cb2
1c351fb8021bb21c351fb8021ab21c351fb80219b21c351fb80218b21c35
1fb80217b21c351fb80216b21c351fb80215b21c351fb80214b21c351fb8
0213b21c351fb80212b21c351fb80211b21c351fb80210b21c351fb8020f
b21c351fb8020eb21c351fb8020db21c351fb8020cb21c351fb8020bb21c
351fb8020ab21c351fb80209b21c351fb80208b21c351fb80207b21c351f
b80206b21c351fb80205b21c351fb80204b21c351fb80203b21c351fb802
02b21c351fb80201b21c351fb80200b21c351fb801ffb21c351fb801feb2
1c351fb801fdb21c351fb801fcb21c351fb801fbb21c351fb801fab21c35
1fb801f9b21c351fb801f8b21c351fb801f7b21c351fb801f6b21c351fb8
01f5b21c351fb801f4b21c351fb801f3b21c351fb801f2b21c351fb801f1
b21c351fb801f0b21c351fb801efb21c351fb801eeb21c351fb801edb21c
351fb801ecb21c351fb801ebb21c351fb801eab21c351fb801e9b21c351f
b801e8b21c351fb801e7b21c351fb801e6b21c351fb801e5b21c351fb801
e4b21c351fb801e3b21b3b1fb801e2b21b3b1fb801e1b21b3b1fb801e0b2
1b3b1fb801dfb21b3b1fb801deb21b3b1fb801ddb21b3b1fb801dcb21b3b
1fb801dbb21b3b1fb801dab21b3b1fb801d9b21b3b1fb801d8b21b3b1fb8
01d7b21b3b1fb801d6b21b3b1fb801d5b21b3b1fb801d4b21b3b1fb801d3
b21b3b1fb801d2b21b3b1fb801d1b21b3b1fb801d0b21b3b1fb801cfb21b
3b1fb801ceb21b3b1fb801cdb21b3b1fb801ccb21b3b1fb801cbb21b3b1f
b801cab21b3b1fb801c9b21b3b1fb801c8b21b3b1fb801c7b21b3b1fb801
c6b21b3b1fb801c5b21b3b1fb801c4b21b3b1fb801c3b21b3b1fb801c2b2
1b3b1fb801c1b21b3b1fb801c0b21b3b1fb801bfb21b3b1fb801beb21b3b
1fb801bdb21b3b1fb801bcb21b3b1fb801bbb21b3b1fb801bab21b3b1fb8
01b9b21b3b1fb801b8b21b3b1fb801b7b21b3b1fb801b6b21b3b1fb801b5
b21b3b1fb801b4b21b3b1fb801b3b21b3b1fb801b2b21b3b1fb801b1b21b
3b1fb801b0b21b3b1fb801afb21a431fb801aeb21a431fb801adb21a431f
b801acb21a431fb801abb21a431fb801aab21a431fb801a9b21a431fb801
a8b21a431fb801a7b21a431fb801a6b21a431fb801a5b21a431fb801a4b2
1a431fb801a3b21a431fb801a2b21a431fb801a1b21a431fb801a0b21a43
1fb8019fb21a431fb8019eb21a431fb8019db21a431fb8019cb21a431fb8
019bb21a431fb8019ab21a431fb80199b21a431fb80198b21a431fb80197
b21a431fb80196b21a431fb80195b21a431fb80194b21a431fb80193b21a
431fb80192b219441fb80191b219441fb80190b219441fb8018fb219441f
b8018eb219441fb8018db219441fb8018cb219441fb8018bb219441fb801
8ab219441fb80189b219441fb80188b219441fb80187b219441fb80186b2
19441fb80185b219441fb80184b219441fb80183b219391fb80182b21944
1fb80181b218441fb80180b218441fb8017fb218441fb8017eb218441fb8
017db218441fb8017cb218441fb8017bb218441fb8017ab218441fb80179
b218441fb80178b218441fb80177b2174c1fb80176b2174c1fb80175b217
4c1fb80174b2174c1fb80173b2174c1fb80172b2174c1fb80171b2174c1f
b80170b2174c1fb8016fb2174c1fb8016eb2174c1fb8016db2174c1fb801
6cb2174c1fb8016bb2174c1fb8016ab2174c1fb80169b2174c1fb80168b2
174c1fb80167b2174c1fb80166b2174c1fb80165b2174c1fb80164b2174c
1fb80163b2174c1fb80162b2174c1fb80161b2165a1fb80160b2165a1fb8
015fb2165a1fb8015eb2165a1fb8015db2165a1fb8015cb2165a1fb8015b
b2165a1fb8015ab2165a1fb80159b2165a1fb80158b2165a1fb80157b216
5a1fb80156b2165a1fb80155b2165a1fb80154b215631fb80153b215631f
b80152b215631fb80151b215631fb80150b214231fb8014fb214231fb801
4eb214231fb8014db213251fb8014cb2122b1fb8014bb2122b1fb8014ab2
122b1fb80149b2122b1fb80148b2122b1fb80147b2122b1fb80146b2122b
1fb80145b2122b1fb80144b2122b1fb80143b211311fb80142b211311fb8
0141b211311fb80140b2103c1fb8013fb2103c1fb8013eb2103c1fb8013d
b2103c1fb8013cb2103c1fb8013bb2103c1fb8013ab2103c1fb80139b210
3c1fb80138b2103c1fb80137b2103c1fb80136b2103c1fb80135b2103c1f
b80134b2103c1fb80133b2103c1fb80132b2103c1fb80131b2103c1fb801
30b2103c1fb8012fb2103c1fb8012eb2103c1fb8012db2103c1fb8012cb2
103c1fb8012bb2103c1fb8012ab2103c1fb80129b2103c1fb80128b2103c
1fb80127b2103c1fb80126b2103c1fb80125b2103c1fb80124b2103c1fb8
0123b2103c1fb80122b2103c1fb80121b2103c1fb80120b2103c1fb8011f
b2103c1fb8011eb2103c1fb8011db2103c1fb8011cb2103c1fb8011bb210
3c1fb8011ab2103c1fb80119b2103c1fb80118b2103c1fb80117b2103c1f
b80116b2103c1fb80115b2103c1fb80114b2103c1fb80113b2103c1fb801
12b2103c1fb80111b2103c1fb80110b2103c1fb8010fb2103c1fb8010eb2
103c1fb8010db2103c1fb8010cb2103c1fb8010bb2103c1fb8010ab20f46
1fb80109b20f461fb80108b20f461fb80107b20f461fb80106b20f461fb8
0105b20f461fb80104b20f461fb80103b20f461fb80102b20f461fb80101
b20f461fb8010040ff0f461fff0f461ffe0f461ffd0f461ffc0f461ffb0f
461ffa0f461ff90f461ff80f461ff70f461ff60f461ff50f461ff40f461f
f30f461ff20f461ff10f461ff00f461fef0f461fee0f461fed0f461fec0f
461feb0f461fea0f461fe90f461fe80f461fe70f461fe60f461fe50f461f
e40f461fe30f461fe20f461fe10f461fe00f461fdf0f461fde0f461fdd0f
461fdc0f461fdb0f461fda0f461fd90f461fd80f461fd70f461fd60f461f
d50f461fd40f461fd30f461fd20f461fd10f461fd00e4f1fcf0e4f1fce0e
4f1fcd0e4f1fcc0e4f1fcb0e4f1fca0e4f1fc90e4f1fc80e4f1fc70e4f1f
c60e4f1fc50e4f1fc40e4f1fc30e4f1fc20e4f1fc10e4f1f40e3c00e411f
bf0e411fbe0e4f1fbd0e4f1fbc0e4f1fbb0e4f1fba0e4f1fb90e4f1fb80e
4f1fb70e4f1fb60e4f1fb50e4f1fb40e4f1fb30e4f1fb20e4f1fb10d5c1f
b00d5c1faf0d5c1fae0d5c1fad0d5c1fac0d5c1fab0d5c1faa0d5c1fa90d
5c1fa80d5c1fa70d5c1fa60d5c1fa50d5c1fa40d5c1fa30d5c1fa20d5c1f
a10d5c1fa00d5c1f9f0d5c1f9e0d5c1f9d0d5c1f9c0c6a1f9b0c6a1f9a0c
6a1f990c6a1f980c6a1f970c6a1f960c6a1f950c6a1f940c6a1f930c6a1f
920c6a1f910c6a1f900c6a1f8f0b2f1f8e0b791f8d0b791f8c0b671f001d
010f1d1f1d8f1d03b01cc01c02b8ffc0405a1c2d30461f1c2f1c020f1c1f
1c8f1c9f1caf1c057f1b01df1bef1b02401b1b1f46401b121646401b0a0d
46401a313446401a272a46401a1b2146401a121746401a0a0e464f195f19
0250186018020018b018c018036018701802b8ffc0b6183a4246301701b8
ffc0401317121646b016c016020012101270128012040ab8ffc0b3121e21
46b8ffc0401112171a462010301040100300109010020eb8ffc0b3103235
46b8ffc0403e10292d460f0f1f0f024f0f5f0f6f0fff0f040f0f9f0faf0f
bf0f040f400f363a460f0e1f0e02410f0e1f0ebf0ecf0edf0e053f0e4f0e
5f0e038f0e9f0e02b80100b316010501b80190b154532b2b4bb807ff524b
b008505bb00188b02553b00188b040515ab00688b000555a5b58b101018e
59b101024354b0114b515a58b101018e59858d8d00421d4bb01d5358b0a0
1d594bb0805358b0401d594bb0ff5358b0001db1160042597374755e732b
5e7374752b2b5e73742b2b5e7301732b742b737475732b2b2b2b2b2b2b2b
747573742b747374002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b002b2b732b2b2b2b2b73732b2b7373747474742b7374
2b737374742b732b2b2b2b2b2b2b2b7374752b737373737374752b737374
74752b2b2b73742b73737373732b5e732b1800>
[9033 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> PBAAAA+Consolas,Bold AddT42Char 
1 682 131 <0002006dffe903d9040e002400310093b10102435558b31a1a0b23b8020b
b31101252bb80217401f0b1bff1a1a1710cc01240026102602080326261e
245117f41e502efd40065200183f1a4ded3fed3f12392f5f5e5d1239ed11
392fed012fedd432c4ed12392f31301b401e1bff1a1a1710cc0124002610
2602080326261e245117f41e502efd40065200183f1a4ded3fed3f12392f
5f5e5d1239ed11392fed31305921270e0323222e0235343e02333335342e
022322060735363633321e0215110323220e021514163332363703080620
4654633b4e7650293d7dbb7e8516314e395aaf5249bf6771a26932f4953e
5636195045336e428522392a172e527446487a58323d273f2c182925c31d
262b568156fd4a01c1182a371f3e414a4500>PBAAAA+Consolas,Bold AddT42Char 
1 2330 139 <00020091000003f205ae0013001d007fb10102435558bc000a023c000000
18021140121d1c151d19191d151c041e1f181dfa1b510fb8014b400d0f05
1f050218030514fa40164f00183f1a4dedde5f5e5ded3fed321112011739
2f2f2f2f10fdd4ed31301bb5181dfa1b510fb8014b400d0f051f05021803
0514fa40164f00183f1a4dedde5f5e5ded3fed3231305901140e0223222e
0235343e0233321e020121352111211521352102e1182b3a22223b2b1818
2b3b22223a2b18fef2fee102190125fc9f0142050e213a2b19192b3a2121
3a2c19192c3afe0bbefcc6bebe00>PBAAAA+Consolas,Bold AddT42Char 
1 2554 144 <0001008b000003dd040e0016005bb10102435558b10b06bb020b00080015
020bb40008165103b8013140094010500b08094f085100183f3f12393f1a
4ded3f012fd4ed10ed3231301bb2165103b8013140094010500b08094f08
5100183f3f12393f1a4ded3f3130592111342322060711231133173e0333
321e02151102e97c3e713ff4d3061f434e5a384e744e270296a76456fd7d
03f89627402d18335d8351fd5600>PBAAAA+Consolas,Bold AddT42Char 
1 3204 150 <0001003bffe903d1053d00190067b10102435558b41119090f12b8021140
170c090a090a091a1b0912fa0e0c0f4f00ff1916ff40035200183f1a4dfd
d6ed3f33cded3211120139392f2f10c4fdc410d4c431301b400f0912fa0e
0c0f4f00ff1916ff40035200183f1a4dfdd6ed3f33cded32313059250606
23222e0235112135211137112115211114163332363703d142863c64915f
2dfeef0111fa018bfe75505e3c722f0a0f122a56855c01f0be010441febb
befe225759140d00>PBAAAA+Consolas,Bold AddT42Char 
1 0 0 <0004004e00000419051b0003000700200034005cbc002101bf002b000d01
5ab41010081a07be0157000200140169000800000158401804021ab11b06
0e303026109b0d0d04069c034126049c0143003ffdce3fed113910ed1239
2fce10deed012fddeddeed10fdc611392fedd4ed31300111211101112111
01140e022307230333323635342e0223233533321e0203140e0223222e02
35343e0233321e020419fc350339fd56025a27496941068a0c7b49421d3f
6143393772a56932f8111e271616281e11111e281616271e11051bfae505
1bfb6a0411fbef02bd375c4326850102422e1f38291897315068fda41626
1d10101d261616271c11111c2700>PBAAAA+Consolas,Bold AddT42Char 
PBAAAA+Consolas,Bold /CharStrings get begin
/space 3 def
/a 131 def
/i 139 def
/n 144 def
/t 150 def
end
PBAAAA+Consolas,Bold /Encoding get
dup 32 /space put
dup 97 /a put
dup 105 /i put
dup 110 /n put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/HEQPQJ+Consolas,Bold /PBAAAA+Consolas,Bold findfont ct_VMDictPut
/HEQPQJ+Consolas,Bold*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a 7{/.notdef}rp /i 4{/.notdef}rp /n 
5{/.notdef}rp /t 139{/.notdef}rp]
HEQPQJ+Consolas,Bold nf
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
52.6312 188.03 mo
(int a)
[9.61954 9.61954 8.57543 9.61954 0 ]xsh
%ADOBeginSubsetFont: PBAAAA+Consolas,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQJ+Consolas,Bold gcheck setglobal} if
1 6928 688 <0002008500fc03e10348000300070018400a0602000407fe0502fe00002f
edd6ed012fc4d4c43130133521150135211585035cfca4035c0286c2c2fe
76c2c200>HEQPQJ+Consolas,Bold AddT42Char 
HEQPQJ+Consolas,Bold /CharStrings get begin
/equal 688 def
end
HEQPQJ+Consolas,Bold /Encoding get
dup 61 /equal put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQJ+Consolas,Bold*1 
[32{/.notdef}rp /space 28{/.notdef}rp /equal 35{/.notdef}rp /a 7{/.notdef}rp /i 
4{/.notdef}rp /n 5{/.notdef}rp /t 139{/.notdef}rp]
HEQPQJ+Consolas,Bold nf
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
99.7106 188.03 mo
(=)sh
%ADOBeginSubsetFont: PBAAAA+Consolas,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQJ+Consolas,Bold gcheck setglobal} if
1 2908 149 <0001009cffe903d1040e0031009bb10102435558b2221900bb0224000f00
28021cb2081921b801024010002210220212032225f2280f051e5008ba01
3a0009ffc040090e1148090cf740055200183f1a4dfdd62bed3f123939fd
d65f5e5ded012fc4edd4ed113931301bb900210102401000221022021203
2225f2280f051e5008ba013a0009ffc040090e1148090cf740055200183f
1a4dfdd62bed3f123939fdd65f5e5ded31305901140e0223222627351616
33323635342e02272e0335343e023332161715262623220615141e02171e
0303d14d7fa15470b4505ebb53605f143764514b714a25386fa66f609439
57994b4b5b12355f4e58784920012b577b4d231514dc27233d3117262325
171535485f403e6e5330140cc71c17363017242225161939485c>HEQPQJ+Consolas,Bold AddT42Char 
HEQPQJ+Consolas,Bold /CharStrings get begin
/s 149 def
end
HEQPQJ+Consolas,Bold /Encoding get
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQJ+Consolas,Bold*1 
[32{/.notdef}rp /space 28{/.notdef}rp /equal 35{/.notdef}rp /a 7{/.notdef}rp /i 
4{/.notdef}rp /n 4{/.notdef}rp /s /t 139{/.notdef}rp]
HEQPQJ+Consolas,Bold nf
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
109.141 188.03 mo
(s)sh
%ADOBeginSubsetFont: PBAAAA+Consolas,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQJ+Consolas,Bold gcheck setglobal} if
1 6098 348 <0001016dffe902f2017100130016bc0005024b000f00000150b10a52003f
ed012fed313001321e0215140e0223222e0235343e02022d2a48351e1e35
482a2846341e1e344601711f3548292847351f1f3547282948351f00>HEQPQJ+Consolas,Bold AddT42Char 
HEQPQJ+Consolas,Bold /CharStrings get begin
/period 348 def
end
HEQPQJ+Consolas,Bold /Encoding get
dup 46 /period put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQJ+Consolas,Bold*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 14{/.notdef}rp /equal 35{/.notdef}rp /a 
7{/.notdef}rp /i 4{/.notdef}rp /n 4{/.notdef}rp /s /t 139{/.notdef}rp]
HEQPQJ+Consolas,Bold nf
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
118.535 188.03 mo
(.)sh
%ADOBeginSubsetFont: PBAAAA+Consolas,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQJ+Consolas,Bold gcheck setglobal} if
1 496 18 <00020025ffe904410531000f001f004db10102435558bf00000202001000
180202000800130117b20d421bb80117b240054400183f1a4ded3fed012f
edd4ed31301bb900130117b20d421bb80117b240054400183f1a4ded3fed
3130590114020606232000113412363633200001342623220e0215141633
323e0204415391c36ffefefefc5391c36f01020104fefc7c8e4764411e7d
8d4765401e0293b2fefea65001570147b20102a650feaafeace8e43b72a7
6ce8e43b72a7>HEQPQJ+Consolas,Bold AddT42Char 
1 1168 134 <0002004cffe903dd0585001600270063b10102435558b90016020bb31301
2017b80217400d0b2801151651155323fc10501cb80131b240065200183f
1a4ded3fed3f3f12390110d6edd432c4ed31301b400b01151651155323fc
10501cb80131b240065200183f1a4ded3fed3f3f123931305921270e0323
222e0235343e023332161711331101141e023332363711262623220e0203
0a0620444e59365a8c5f324f8cc071264d1ef4fd6f172d422a3e703f1d55
2b3b5e43249627402d194885be758ccd87410a08018dfa7b01f454774c23
645701bc0b0e30587f00>HEQPQJ+Consolas,Bold AddT42Char 
1 1388 135 <00020066ffe90400040e002000290067b10102435558b30c0c1700b8020f
b2212904b8020f40121721cd04042a26f31c500dfe0c09ff40125200183f
1a4dfdd6ed3fed12392fed012fed32dded11392f31301b401121cd04042a
26f31c500dfe0c09ff40125200183f1a4dfdd6ed3fed12392fed31305901
14060721141e0233323637150e0323222e0235343e0233321e0207362e02
2322060704000303fd64294b69404aa95b275c60622e74b88044447cb16d
6ca6703af8012037492a5c760b024a19502343664524171ac20b120e0742
81be7d7ccb914f4378a6403c593a1c7b7000>HEQPQJ+Consolas,Bold AddT42Char 
1 1616 136 <000200000000041b0598001b001c0079b10102435558b210090db8020d40
120f0a00120f0f1d1e1209fa0f130c0c180e1bb80101b70003fd4018540e
5100183f3f1a4dfdd6ed1112392f3933ed32111201392fc4d4ce10fdc4c4
31301b400a1209fa0f130c0c180e1bb80101b70003fd4018540e5100183f
3f1a4dfdd6ed1112392f3933ed3231305901262623220e02151521152111
231121352135343e023332161701041b2c793f2b4a361f018ffe71f6fed9
01273f73a264427733fbe504b60e1317324d37a4befd5802a8be9a6c9b63
2e110cfe7d00>HEQPQJ+Consolas,Bold AddT42Char 
1 3558 154 <000100210000044803f8000b00c5b10102435558402606050a0902235209
04080323520808090509050903000b0702032001010c0d0a071a07020307
b8fff0401a00011001020f05012001040a07040b090806054f0b0b020003
5100183f3333332f3f333333121739385f5e5d385f5d11120139192f1a18
cd3219d518cd321139392f2f1133102b87c4102b87c411013331301bb60a
071a07020307b8fff0401a00011001020f05012001040a07040b09080605
4f0b0b0200035100183f3333332f3f333333121739385f5e5d385f5d3130
592103032101012113132101010319e8e9fed9017dfe970129e4e10112fe
a201710156feaa020001f8feb2014efe0afdfe00>HEQPQJ+Consolas,Bold AddT42Char 
HEQPQJ+Consolas,Bold /CharStrings get begin
/O 18 def
/d 134 def
/e 135 def
/f 136 def
/x 154 def
end
HEQPQJ+Consolas,Bold /Encoding get
dup 79 /O put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQJ+Consolas,Bold*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 14{/.notdef}rp /equal 17{/.notdef}rp /O 
17{/.notdef}rp /a 2{/.notdef}rp /d /e /f 2{/.notdef}rp /i 
4{/.notdef}rp /n 4{/.notdef}rp /s /t 3{/.notdef}rp /x 135{/.notdef}rp]
HEQPQJ+Consolas,Bold nf
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
127.965 188.03 mo
(indexOf)
[9.5853 9.58531 8.5412 9.58531 9.58531 9.58533 0 ]xsh
%ADOBeginSubsetFont: PBAAAA+Consolas,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQJ+Consolas,Bold gcheck setglobal} if
1 6302 383 <00010110fe5c038705d3000f001bb20f090cb801e3b6080003086d005600
3f3f012f3333edd4c431300126021134123636371706021514121702f6f3
f34883b56c8bc3c4c4c3fe5cce01d8011098010feed15b8baffe6ae0e3fe
5dad>HEQPQJ+Consolas,Bold AddT42Char 
HEQPQJ+Consolas,Bold /CharStrings get begin
/parenleft 383 def
end
HEQPQJ+Consolas,Bold /Encoding get
dup 40 /parenleft put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQJ+Consolas,Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 5{/.notdef}rp /period 14{/.notdef}rp /equal 
17{/.notdef}rp /O 17{/.notdef}rp /a 2{/.notdef}rp /d /e /f 
2{/.notdef}rp /i 4{/.notdef}rp /n 4{/.notdef}rp /s /t 3{/.notdef}rp 
/x 135{/.notdef}rp]
HEQPQJ+Consolas,Bold nf
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
193.862 188.03 mo
(\()sh
%ADOBeginSubsetFont: HIBBAA+Consolas,Bold Initial
ct_T42Dict begin
-0.473 -0.293 0.699 0.969
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+Consolas,Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f324a81fb23000000cc000000606376
74202ef908b60000012c0000050e6670676d20a426c00000063c00000910
676c7966f04e2b8b00006a980000098868656164ec3b96f700000f4c0000
003668686561091d07ca00000f8400000024686d747841fa08c200000fa8
000023a26c6f6361334132670000334c000015626d617870148810be0000
48b0000000206e616d65fb1e395e000048d0000011707072657029c4764f
00005a4000001058676469720000000000000000000000000003046602bc
00050008059905330000011e05990533000003d000c202000809020b0709
020204030204e10002ff4000fcff00000009000000004d53202000200000
201d05f1fdf1015e075c02026000019fdfd7000003f8051b000000200003
0000076c0337fe5c0000000000000000000000000000006e007e009100a9
00bf00e101130138016901870087009400bb00c200c600d900e300ff0114
014801600184000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000051b00160000ffeafe6afe85ff2905f2fee5fe5c
0617ff0605d705e503f800160000ffea05850013fe73ffe9fe6afed9ff29
04cffe5cff000666ff29fff002390011051b00160000ffea047b0016ff29
fff0056a058505b205d3034cfe1500000000079e00000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000005e0069006f0048008300850086008700880089
008d0078007a007d0086007d008500910092009500970098009b00a300a4
008e009a008b008c008e0091009c008e0099009a009b0088009700a600a8
00a900aa00ac00ad00ae00b600b800ba00bb00bc00bd00c100c200a000ac
00ae00a800ab009f00a000a600a800aa00ac00ae00af00b000b200b300b4
00b600b700bb00bc00be00bf00c000c100c300c400c500c700c900ca00cb
00cc00cd00ce00cf00ba00bc00c100c300c500c600c700ca00cb00cc00cd
00ce00cf00b400b600b800b900ba00bb00bc00bd00be00bf00c000c100c2
00c300c400c500c700c800c900ca00cb00cc00cd00ce00cf00d000d100d3
00d500d600d700d800d900da00db00dc00dd00de00df00e000e100e300e5
00e600e800ea00ee00f000f100f300f400d100d300d400d500d700d800d9
00e100e500e600ec00d000d100d300d400d500d600d700d900da00db00dc
00dd00de00df00e000e300ed011301120113012b0135012b013301370138
0139013f01400168017d01870188007f0085008b008b0094009d008f0092
0094009c00a2009400a0009200a500a600a700aa00a600a800aa00ab00b2
00a400b000aa00ac00ae00af00b100b200af00b000b200b300b500b600bc
00bd00bb00c300bf00c000c100b900bc00c100c200c300c700c600c400c5
00ca00cb00cd00ce00cf00c400c500c600cb00cc00cd00ce00cf00ca00cc
00cd00ce00cf00d100d200d300d500d100d300d500d600d700d800d900db
00dc00dd00d000d100d300d500d700d800d900da00db00dd00e300e400eb
00ec00ed00ee00d600d900db00df00e100e300e700e800ec00d900de00df
00e000e100e300e400e500e600e700e900ea00eb00ec00ed00ee00f000f1
00f200f300de00df00e100e200e300e400e500e700e800e900ea00eb00ec
00ed00ee00ef00f000f100f400f600f700fa00fc00fe0100010201040105
010800f300fe010000f400f500f600f700f800f900fa00fb00fc00fd00fe
00ff01000102010301040105010601080109010a00f100f200f300f400f5
00f600f700f800f900fa00fb00fc00fd00fe00ff01000102010401050106
0108010e010f01100111011201130123010a010c010d011201130116011a
011b0121012501270150013d0131013601390149014a012f013501370139
013a013e013f01400142014301440147014a014e01510152017101680170
017401750185000000000000000000000000000000000000000000000000
0096000000000000000000000000000000000000026201cc02f8fdfe075c
000000000000000005850593033d024c0000fff0005c005c008efe600000
00070636060b000a05f7000b05430010051b02cefff601d306dc000b0617
0415fff4000040465f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948
47464544434241403f3e3d3c3b3a39383736352f2e2d2c2826252423221f
181411100f0d0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b004
2651582320b00d44235921212d2c20204518684420b001602045b0467668
8a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b028
2370b101283e01b0282370b10228453ab10200080d2d2c2045b003254561
64b050515845441b2121592d2c2045b0004360442d2c01b00643b0074365
0a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58
b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c
234445b02b23442d2c4b525845441b2121592d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b08051580c
6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648b
b81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c
4523456023456023456023766818b08062202d2cb00426b00426b00425b0
042545234520b003266062636820b0032661658a2344442d2c2045b00054
58b040442045b04061441b2121592d2c45b1302f4523456160b001606944
2d2c4b5158b02f2370b01423421b2121592d2c4b515820b0032545695358
441b2121591b2121592d2c45b01443b0006063b0016069442d2cb02f4544
2d2c452320458a60442d2c45234560442d2c4b235158b90033ffe0b13420
1bb3330034005944442d2cb0164358b00326458a586466b01f601b64b020
606620581b21b04059b001615923586559b02923442310b029e01b212121
2121592d2cb0164358b004254564b020606620581b21b04059b001612358
6559b0292344b00425b00725082058021b0359b0052510b004252046b004
2523423cb0072510b006252046b00425b0016023423c2058011b0059b005
2510b00425b029e0b0072510b00625b029e0b00425b00725082058021b03
59b00425b003254348b00625b00325b0016043481b215921212121212121
2d2cb0164358b004254564b020606620581b21b04059b0016123581b6559
b0292344b00525b00825082058021b0359b0042510b005252046b0042523
423cb00425b0072508b0072510b006252046b00425b0016023423c205801
1b0059b0042510b00525b029e0b02920456544b0072510b00625b029e0b0
0525b00825082058021b0359b00525b003254348b00425b0072508b00625
b00325b0016043481b2159212121212121212d2c02b00425202046b00425
2342b0052508b003254548212121212d2c02b0032520b0042508b0022543
482121212d2c452320451820b00050205823652359236820b040505821b0
4059235865598a60442d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c208a08234b538a4b515a5823381b2121592d2c0020
b200400325b0062649618b3812342d2c014623466023466123201020468a
61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b2159
2d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123018851
b1400188535a58b910000020885458b202010243604259b12401885158b9
20000040885458b2020202436042b12401885458b2022002436042004b01
4b5258b2020802436042591bb940000080885458b202040243604259b940
00008063b80100885458b202080243604259b94000010063b80200885458
b202100243604259b94000020063b80400885458b2024002436042595959
59592d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d000100000005570aca7b8a1f5f0f
3cf50009080000000000bbe31b2800000000cf6ada67fc31fda1059a07c0
0001000800020000000000000001000005f1fdf1015e0466fc31fe51059a
0001000000000000000000000000000007210466004e0466000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000466002d00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000466004c000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000046600b400000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000004660054
000000000000000000000000046600a00000000000000000000000000466
005200000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000466019800000000000000000000
000000000000000000000000000000000000000000000466005204660037
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000046600e3000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000466
00fc00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000004660103000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000046600fe000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000007f007f007f
007f007f007f007f007f007f007f007f007f007f007f007f007f00f800f8
00f800f800f800f800f800f800f800f800f800f800f800f800f800f800f8
00f800f800f800f800f800f800f800f800f800f800f800f800f800f800f8
00f800f800f800f800f800f800f800f800f800f800f800f800f800f800f8
00f800f800f800f800f800f800f800f800f800f800f800f800f800f800f8
00f800f800f800f800f800f800f800f800f800f800f800f800f800f800f8
00f800f800f800f800f800f800f800f800f800f800f800f800f800f800f8
00f800f800f800f800f800f800f800f800f800f800f800f800f800f800f8
00f800f800f800f800f800f800f800f800f800f800f80166016601660166
016601660166016601660166016601660166016601c501c501c501c501c5
01c501c501c501c501c501c501c501c501c501c501c501c501c501c501c5
01c501c501c501c501c501c501c501c501c501c501c501c501c501c501c5
01c501c501c501c501c501c501c501c501c501c501c501c501c501c501c5
01c501c501c501c501c501c501c501c501c501c501c501c501c501c501c5
01c501c501c501c501c501c501c501c501c501c501c501c501c501c501c5
01c501c501c501c501c501c501c501c501c501c501c501c501c501c501c5
01c501c501c501c501c501c501c501c501c501c501c501c501c501c501c5
01c501c501c501c501c501c501c501c501c501c501c501c501c501c501c5
01c501c501c501c501c501c501c501c501c501c501c501c501c501c501c5
01c501c501c501c501c501c501c501c501c501c501c501c501c501c50219
021902190219025e025e025e025e02c702c702c702c702c702c702c702c7
02c702c702c702c702c702c702c702c702c702c702c702c702c702c702c7
02c702c702c702c702c702c702c702c702c702c702c702c702c702c702c7
02c702c702c702c7030103010301030103010301030103010301035b03b5
03b503b503b503b503b503b503b503b503b503b503b503b503b503b503b5
03b503b503b503b503b503b503b503b503b503b503b503b503b503b503b5
03b503b503b503b503b503b503b503b503b503b503b503b503b503b503b5
03b503b503b503b503b503b503b503b503b503b503b503b503b503b503b5
03b503b503b503b503b503b503b503b503b503b503b503b503b503b503b5
03b503b503b503b503b503b503b503b503b503b503b503b503b503b503b5
03b503b503b503b503b503b503b503b503b503b503b503b503b503b503b5
03b503b503b503b503b503b503b503b503b503b503b503b503b503b503b5
03b503b503b503b503b503b503b503b503b503b503b503b503b503b503b5
03b503b503b503b503b503b503b503b503b503b503b503b503b503b503b5
03b503b503b503b503b503b503b503b503b503b503b503b503b503b503b5
03b503b503b503b503b503b503b503b503b503b503b503b503b503b503b5
03b503b503b503b503b503b503b503b503b503b503b503b503b503b503b5
03b503b503b503b503b503b503b503b503b503b503b503b503b503b503b5
03b503b503b503b503b503b503b503b503b503b503b503b503b503b503b5
03b503b503b503b503b503de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de03de03de03de03de03de03de03de03de
03de03de03de03de03de03de03de042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c042c042c042c042c042c042c042c042c042c042c042c042c042c
042c042c0482048204820482048204820482048204820482048204820482
048204820482048204820482048204820482048204820482048204820482
048204820482048204820482048204820482048204820482048204820482
048204820482048204820482048204820482048204820482048204820482
048204820482048204820482048204820482048204820482048204820482
048204820482048204820482048204820482048204820482048204820482
048204820482048204820482048204820482048204820482048204820482
048204820482048204820482048204820482048204820482048204820482
0482048204820482048204c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c404c404c404c404c404c404c404c404c404c404c404c404c4
04c404c404c40000000100000ab0003500040000000000020010002f0060
000009631058000000000000002d02220000000300000000006400000000
000300000001001000640000000300000002000805de0000000300000003
003005b60000000300000004001a05cc0000000300000005001805e60000
000300000006001a05fe0000000300000007007806180000000300000008
002a000e000000030000000900200690000000030000000a055200640000
00030000000b005606b0000000030000000c002a0706000000030000000d
02980730000000030000000e006c09c8000100000000000000320a340001
00000000000100080a66000100000000000200040d230001000000000003
00180d0f0001000000000004000d0d1a0001000000000005000c0d270001
000000000006000d0d330001000000000007003c0d400001000000000008
00150a3b000100000000000900100d7c000100000000000a02a90a660001
00000000000b002b0d8c000100000000000c00150db7000100000000000d
014c0dcc000100000000000e00360f180003000104090000006400000003
000104090001001000640003000104090002000805de0003000104090003
003005b60003000104090004001a05cc0003000104090005001805e60003
000104090006001a05fe0003000104090007007806180003000104090008
002a000e000300010409000900200690000300010409000a055200640003
00010409000b005606b0000300010409000c002a0706000300010409000d
02980730000300010409000e006c09c800a9002000320030003100340020
004d006900630072006f0073006f0066007400200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e0043006f
006e0073006f006c00610073002000690073002000610069006d00650064
00200066006f0072002000750073006500200069006e002000700072006f
006700720061006d006d0069006e006700200065006e007600690072006f
006e006d0065006e0074007300200061006e00640020006f007400680065
0072002000630069007200630075006d007300740061006e006300650073
002000770068006500720065002000610020006d006f006e006f00730070
006100630065006400200066006f006e0074002000690073002000730070
0065006300690066006900650064002e00200041006c006c002000630068
006100720061006300740065007200730020006800610076006500200074
00680065002000730061006d0065002000770069006400740068002c0020
006c0069006b00650020006f006c00640020007400790070006500770072
00690074006500720073002c0020006d0061006b0069006e006700200069
00740020006100200067006f006f0064002000630068006f006900630065
00200066006f007200200070006500720073006f006e0061006c00200061
006e006400200062007500730069006e00650073007300200063006f0072
0072006500730070006f006e00640061006e00630065002e002000540068
006500200069006d00700072006f007600650064002000570069006e0064
006f0077007300200066006f006e007400200064006900730070006c0061
007900200061006c006c006f007700650064002000610020006400650073
00690067006e00200077006900740068002000700072006f0070006f0072
00740069006f006e007300200063006c006f00730065007200200074006f
0020006e006f0072006d0061006c00200074006500780074002000740068
0061006e00200074007200610064006900740069006f006e0061006c0020
006d006f006e006f00730070006100630065006400200066006f006e0074
00730020006c0069006b006500200043006f00750072006900650072002e
0020005400680069007300200061006c006c006f0077007300200066006f
00720020006d006f0072006500200063006f006d0066006f007200740061
0062006c0079002000720065006100640069006e00670020006f00660020
0065007800740065006e006400650064002000740065007800740020006f
006e002000730063007200650065006e002e0020004f00700065006e0054
00790070006500200066006500610074007500720065007300200069006e
0063006c007500640065002000680061006e00670069006e00670020006f
00720020006c0069006e0069006e00670020006e0075006d006500720061
006c0073003b00200073006c00610073006800650064002c00200064006f
007400740065006400200061006e00640020006e006f0072006d0061006c
0020007a00650072006f0073003b00200061006e006400200061006c0074
00650072006e006100740069007600650020007300680061007000650073
00200066006f0072002000610020006e0075006d0062006500720020006f
00660020006c006f00770065007200630061007300650020006c00650074
0074006500720073002e00200054006800650020006c006f006f006b0020
006f006600200074006500780074002000630061006e0020006200650020
00740075006e0065006400200074006f00200070006500720073006f006e
0061006c0020007400610073007400650020006200790020007600610072
00790069006e006700200074006800650020006e0075006d006200650072
0020006f00660020006200610072007300200061006e0064002000770061
007600650073002e004d006900630072006f0073006f00660074003a0020
0043006f006e0073006f006c0061007300200042006f006c006400560065
007200730069006f006e00200035002e003300340043006f006e0073006f
006c00610073002d0042006f006c00640043006f006e0073006f006c0061
007300200069007300200061002000740072006100640065006d00610072
006b0020006f006600200074006800650020004d006900630072006f0073
006f00660074002000670072006f007500700020006f006600200063006f
006d00700061006e006900650073002e004c007500630028006100730029
002000640065002000470072006f006f00740068007400740070003a002f
002f007700770077002e006d006900630072006f0073006f00660074002e
0063006f006d002f007400790070006f006700720061007000680079002f
006300740066006f006e007400730068007400740070003a002f002f0066
006f006e007400660061006200720069006b002e0063006f006d0059006f
00750020006d006100790020007500730065002000740068006900730020
0066006f006e00740020006100730020007000650072006d006900740074
006500640020006200790020007400680065002000450055004c00410020
0066006f00720020007400680065002000700072006f0064007500630074
00200069006e002000770068006900630068002000740068006900730020
0066006f006e007400200069007300200069006e0063006c007500640065
006400200074006f00200064006900730070006c0061007900200061006e
00640020007000720069006e007400200063006f006e00740065006e0074
002e00200059006f00750020006d006100790020006f006e006c00790020
00280069002900200065006d006200650064002000740068006900730020
0066006f006e007400200069006e00200063006f006e00740065006e0074
0020006100730020007000650072006d0069007400740065006400200062
0079002000740068006500200065006d00620065006400640069006e0067
0020007200650073007400720069006300740069006f006e007300200069
006e0063006c007500640065006400200069006e00200074006800690073
00200066006f006e0074003b00200061006e006400200028006900690029
002000740065006d0070006f0072006100720069006c007900200064006f
0077006e006c006f006100640020007400680069007300200066006f006e
007400200074006f002000610020007000720069006e0074006500720020
006f00720020006f00740068006500720020006f00750074007000750074
002000640065007600690063006500200074006f002000680065006c0070
0020007000720069006e007400200063006f006e00740065006e0074002e
0068007400740070003a002f002f007700770077002e006d006900630072
006f0073006f00660074002e0063006f006d002f007400790070006f0067
00720061007000680079002f0066006f006e00740073002f006400650066
00610075006c0074002e0061007300700078a92032303134204d6963726f
736f667420436f72706f726174696f6e2e20416c6c205269676874732052
657365727665642e436f6e736f6c61732069732061696d656420666f7220
75736520696e2070726f6772616d6d696e6720656e7669726f6e6d656e74
7320616e64206f746865722063697263756d7374616e6365732077686572
652061206d6f6e6f73706163656420666f6e742069732073706563696669
65642e20416c6c2063686172616374657273206861766520746865207361
6d652077696474682c206c696b65206f6c64207479706577726974657273
2c206d616b696e67206974206120676f6f642063686f69636520666f7220
706572736f6e616c20616e6420627573696e65737320636f72726573706f
6e64616e63652e2054686520696d70726f7665642057696e646f77732066
6f6e7420646973706c617920616c6c6f77656420612064657369676e2077
6974682070726f706f7274696f6e7320636c6f73657220746f206e6f726d
616c2074657874207468616e20747261646974696f6e616c206d6f6e6f73
706163656420666f6e7473206c696b6520436f75726965722e2054686973
20616c6c6f777320666f72206d6f726520636f6d666f727461626c792072
656164696e67206f6620657874656e6465642074657874206f6e20736372
65656e2e204f70656e5479706520666561747572657320696e636c756465
2068616e67696e67206f72206c696e696e67206e756d6572616c733b2073
6c61736865642c20646f7474656420616e64206e6f726d616c207a65726f
733b20616e6420616c7465726e61746976652073686170657320666f7220
61206e756d626572206f66206c6f77657263617365206c6574746572732e
20546865206c6f6f6b206f6620746578742063616e2062652074756e6564
20746f20706572736f6e616c2074617374652062792076617279696e6720
746865206e756d626572206f66206261727320616e642077617665732e4d
6963726f736f66743a20436f6e736f6c617320426f6c6456657273696f6e
20352e3334436f6e736f6c61732d426f6c64436f6e736f6c617320697320
612074726164656d61726b206f6620746865204d6963726f736f66742067
726f7570206f6620636f6d70616e6965732e4c7563286173292064652047
726f6f74687474703a2f2f7777772e6d6963726f736f66742e636f6d2f74
79706f6772617068792f6374666f6e7473687474703a2f2f666f6e746661
6272696b2e636f6d596f75206d617920757365207468697320666f6e7420
6173207065726d6974746564206279207468652045554c4120666f722074
68652070726f6475637420696e207768696368207468697320666f6e7420
697320696e636c7564656420746f20646973706c617920616e6420707269
6e7420636f6e74656e742e20596f75206d6179206f6e6c79202869292065
6d626564207468697320666f6e7420696e20636f6e74656e742061732070
65726d69747465642062792074686520656d62656464696e672072657374
72696374696f6e7320696e636c7564656420696e207468697320666f6e74
3b20616e6420286969292074656d706f726172696c7920646f776e6c6f61
64207468697320666f6e7420746f2061207072696e746572206f72206f74
686572206f75747075742064657669636520746f2068656c70207072696e
7420636f6e74656e742e687474703a2f2f7777772e6d6963726f736f6674
2e636f6d2f7479706f6772617068792f666f6e74732f64656661756c742e
61737078413c028600640285005500000285002002850040028500600285
0080028500a0028500c0028500e0028500080009028300640284005500d0
0284000100d0028200e002820002008f02820001009f0281000100600281
000102800064027f00550040027f0070027f00020000027f0030027f0060
027f0003027db2644155b8027eb241ff1f4156027b0064027c0055000002
7c0030027c0060027c00030070027c00a0027c00d0027c0003002f027c00
5f027c000200cf027c00ff027c00020000027c0030027c0060027c000302
790064027a00550030027a0070027a00020070027a00b0027a00f0027a00
03004f027a00cf027a000200df02780001008002780001005f0278000100
000278000102760064027700550000027700010030027700c00277000200
0002770010027700a002774077037201411f6f032f1f6e02411f692d6855
672d6655652d6455632d6255613260551f602f60025f325e558f5a01505a
01ef5a01105a305a605a03562d5555c055018055d05502542d5355cf5301
b053018f530110537053028f53016053705302522d5155502d4f55604f01
1f4f01442d4355422d415540b8026eb2090f46b9026c026bb2321f40b802
6bb3090f46c0bb0273000100400271b331374640b80271b21c2146b8024b
b220231fb8024ab220231fb80249b220231fb80248b21f261fb80247b21f
261fb80246b21f261fb80245b21e291fb80244b21e291fb80243b21e291f
b80242b21e291fb80241b21e291fb80240b21e291fb8023fb21e291fb802
3eb21e291fb8023db21e291fb8023cb21e291fb8023bb21e291fb8023ab2
1e291fb80239b21e291fb80238b21e291fb80237b21e291fb80236b21e29
1fb80235b21e291fb80234b21e291fb80233b21e291fb80232b21e291fb8
0231b21e291fb80230b21e291fb8022fb21e291fb8022eb21d311fb8022d
b21d311fb8022cb21d311fb8022bb21d311fb8022ab21d311fb80229b21d
311fb80228b21d311fb80227b21d311fb80226b21d311fb80225b21d311f
b80224b21d311fb80223b21d311fb80222b21d311fb80221b21d311fb802
20b21d311fb8021fb21d311fb8021eb21d311fb8021db21d311fb8021cb2
1c351fb8021bb21c351fb8021ab21c351fb80219b21c351fb80218b21c35
1fb80217b21c351fb80216b21c351fb80215b21c351fb80214b21c351fb8
0213b21c351fb80212b21c351fb80211b21c351fb80210b21c351fb8020f
b21c351fb8020eb21c351fb8020db21c351fb8020cb21c351fb8020bb21c
351fb8020ab21c351fb80209b21c351fb80208b21c351fb80207b21c351f
b80206b21c351fb80205b21c351fb80204b21c351fb80203b21c351fb802
02b21c351fb80201b21c351fb80200b21c351fb801ffb21c351fb801feb2
1c351fb801fdb21c351fb801fcb21c351fb801fbb21c351fb801fab21c35
1fb801f9b21c351fb801f8b21c351fb801f7b21c351fb801f6b21c351fb8
01f5b21c351fb801f4b21c351fb801f3b21c351fb801f2b21c351fb801f1
b21c351fb801f0b21c351fb801efb21c351fb801eeb21c351fb801edb21c
351fb801ecb21c351fb801ebb21c351fb801eab21c351fb801e9b21c351f
b801e8b21c351fb801e7b21c351fb801e6b21c351fb801e5b21c351fb801
e4b21c351fb801e3b21b3b1fb801e2b21b3b1fb801e1b21b3b1fb801e0b2
1b3b1fb801dfb21b3b1fb801deb21b3b1fb801ddb21b3b1fb801dcb21b3b
1fb801dbb21b3b1fb801dab21b3b1fb801d9b21b3b1fb801d8b21b3b1fb8
01d7b21b3b1fb801d6b21b3b1fb801d5b21b3b1fb801d4b21b3b1fb801d3
b21b3b1fb801d2b21b3b1fb801d1b21b3b1fb801d0b21b3b1fb801cfb21b
3b1fb801ceb21b3b1fb801cdb21b3b1fb801ccb21b3b1fb801cbb21b3b1f
b801cab21b3b1fb801c9b21b3b1fb801c8b21b3b1fb801c7b21b3b1fb801
c6b21b3b1fb801c5b21b3b1fb801c4b21b3b1fb801c3b21b3b1fb801c2b2
1b3b1fb801c1b21b3b1fb801c0b21b3b1fb801bfb21b3b1fb801beb21b3b
1fb801bdb21b3b1fb801bcb21b3b1fb801bbb21b3b1fb801bab21b3b1fb8
01b9b21b3b1fb801b8b21b3b1fb801b7b21b3b1fb801b6b21b3b1fb801b5
b21b3b1fb801b4b21b3b1fb801b3b21b3b1fb801b2b21b3b1fb801b1b21b
3b1fb801b0b21b3b1fb801afb21a431fb801aeb21a431fb801adb21a431f
b801acb21a431fb801abb21a431fb801aab21a431fb801a9b21a431fb801
a8b21a431fb801a7b21a431fb801a6b21a431fb801a5b21a431fb801a4b2
1a431fb801a3b21a431fb801a2b21a431fb801a1b21a431fb801a0b21a43
1fb8019fb21a431fb8019eb21a431fb8019db21a431fb8019cb21a431fb8
019bb21a431fb8019ab21a431fb80199b21a431fb80198b21a431fb80197
b21a431fb80196b21a431fb80195b21a431fb80194b21a431fb80193b21a
431fb80192b219441fb80191b219441fb80190b219441fb8018fb219441f
b8018eb219441fb8018db219441fb8018cb219441fb8018bb219441fb801
8ab219441fb80189b219441fb80188b219441fb80187b219441fb80186b2
19441fb80185b219441fb80184b219441fb80183b219391fb80182b21944
1fb80181b218441fb80180b218441fb8017fb218441fb8017eb218441fb8
017db218441fb8017cb218441fb8017bb218441fb8017ab218441fb80179
b218441fb80178b218441fb80177b2174c1fb80176b2174c1fb80175b217
4c1fb80174b2174c1fb80173b2174c1fb80172b2174c1fb80171b2174c1f
b80170b2174c1fb8016fb2174c1fb8016eb2174c1fb8016db2174c1fb801
6cb2174c1fb8016bb2174c1fb8016ab2174c1fb80169b2174c1fb80168b2
174c1fb80167b2174c1fb80166b2174c1fb80165b2174c1fb80164b2174c
1fb80163b2174c1fb80162b2174c1fb80161b2165a1fb80160b2165a1fb8
015fb2165a1fb8015eb2165a1fb8015db2165a1fb8015cb2165a1fb8015b
b2165a1fb8015ab2165a1fb80159b2165a1fb80158b2165a1fb80157b216
5a1fb80156b2165a1fb80155b2165a1fb80154b215631fb80153b215631f
b80152b215631fb80151b215631fb80150b214231fb8014fb214231fb801
4eb214231fb8014db213251fb8014cb2122b1fb8014bb2122b1fb8014ab2
122b1fb80149b2122b1fb80148b2122b1fb80147b2122b1fb80146b2122b
1fb80145b2122b1fb80144b2122b1fb80143b211311fb80142b211311fb8
0141b211311fb80140b2103c1fb8013fb2103c1fb8013eb2103c1fb8013d
b2103c1fb8013cb2103c1fb8013bb2103c1fb8013ab2103c1fb80139b210
3c1fb80138b2103c1fb80137b2103c1fb80136b2103c1fb80135b2103c1f
b80134b2103c1fb80133b2103c1fb80132b2103c1fb80131b2103c1fb801
30b2103c1fb8012fb2103c1fb8012eb2103c1fb8012db2103c1fb8012cb2
103c1fb8012bb2103c1fb8012ab2103c1fb80129b2103c1fb80128b2103c
1fb80127b2103c1fb80126b2103c1fb80125b2103c1fb80124b2103c1fb8
0123b2103c1fb80122b2103c1fb80121b2103c1fb80120b2103c1fb8011f
b2103c1fb8011eb2103c1fb8011db2103c1fb8011cb2103c1fb8011bb210
3c1fb8011ab2103c1fb80119b2103c1fb80118b2103c1fb80117b2103c1f
b80116b2103c1fb80115b2103c1fb80114b2103c1fb80113b2103c1fb801
12b2103c1fb80111b2103c1fb80110b2103c1fb8010fb2103c1fb8010eb2
103c1fb8010db2103c1fb8010cb2103c1fb8010bb2103c1fb8010ab20f46
1fb80109b20f461fb80108b20f461fb80107b20f461fb80106b20f461fb8
0105b20f461fb80104b20f461fb80103b20f461fb80102b20f461fb80101
b20f461fb8010040ff0f461fff0f461ffe0f461ffd0f461ffc0f461ffb0f
461ffa0f461ff90f461ff80f461ff70f461ff60f461ff50f461ff40f461f
f30f461ff20f461ff10f461ff00f461fef0f461fee0f461fed0f461fec0f
461feb0f461fea0f461fe90f461fe80f461fe70f461fe60f461fe50f461f
e40f461fe30f461fe20f461fe10f461fe00f461fdf0f461fde0f461fdd0f
461fdc0f461fdb0f461fda0f461fd90f461fd80f461fd70f461fd60f461f
d50f461fd40f461fd30f461fd20f461fd10f461fd00e4f1fcf0e4f1fce0e
4f1fcd0e4f1fcc0e4f1fcb0e4f1fca0e4f1fc90e4f1fc80e4f1fc70e4f1f
c60e4f1fc50e4f1fc40e4f1fc30e4f1fc20e4f1fc10e4f1f40e3c00e411f
bf0e411fbe0e4f1fbd0e4f1fbc0e4f1fbb0e4f1fba0e4f1fb90e4f1fb80e
4f1fb70e4f1fb60e4f1fb50e4f1fb40e4f1fb30e4f1fb20e4f1fb10d5c1f
b00d5c1faf0d5c1fae0d5c1fad0d5c1fac0d5c1fab0d5c1faa0d5c1fa90d
5c1fa80d5c1fa70d5c1fa60d5c1fa50d5c1fa40d5c1fa30d5c1fa20d5c1f
a10d5c1fa00d5c1f9f0d5c1f9e0d5c1f9d0d5c1f9c0c6a1f9b0c6a1f9a0c
6a1f990c6a1f980c6a1f970c6a1f960c6a1f950c6a1f940c6a1f930c6a1f
920c6a1f910c6a1f900c6a1f8f0b2f1f8e0b791f8d0b791f8c0b671f001d
010f1d1f1d8f1d03b01cc01c02b8ffc0405a1c2d30461f1c2f1c020f1c1f
1c8f1c9f1caf1c057f1b01df1bef1b02401b1b1f46401b121646401b0a0d
46401a313446401a272a46401a1b2146401a121746401a0a0e464f195f19
0250186018020018b018c018036018701802b8ffc0b6183a4246301701b8
ffc0401317121646b016c016020012101270128012040ab8ffc0b3121e21
46b8ffc0401112171a462010301040100300109010020eb8ffc0b3103235
46b8ffc0403e10292d460f0f1f0f024f0f5f0f6f0fff0f040f0f9f0faf0f
bf0f040f400f363a460f0e1f0e02410f0e1f0ebf0ecf0edf0e053f0e4f0e
5f0e038f0e9f0e02b80100b316010501b80190b154532b2b4bb807ff524b
b008505bb00188b02553b00188b040515ab00688b000555a5b58b101018e
59b101024354b0114b515a58b101018e59858d8d00421d4bb01d5358b0a0
1d594bb0805358b0401d594bb0ff5358b0001db1160042597374755e732b
5e7374752b2b5e73742b2b5e7301732b742b737475732b2b2b2b2b2b2b2b
747573742b747374002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b002b2b732b2b2b2b2b73732b2b7373747474742b7374
2b737374742b732b2b2b2b2b2b2b2b7374752b737373737374752b737374
74752b2b2b73742b73737373732b5e732b1800>
[2441 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 1538 361 <00020052032b042f05980017002f002ab11820b80245b22a0012b8024540
0a0800250d1800ae2f1754003f33ed32c432012fd6ed10d6fdc631300126
0615141e0215140e0223222e0235343e023305260615141e0215140e0223
222e0235343e0233022369701c221c152739232c4530193a74ae75020c69
701c221c152738232d4530193a74ae7504fe03353f232a2730281d362a19
26415730538c663a9a03353f232a2730281d362a1926415730538c663a00
>HIBBAA+Consolas,Bold AddT42Char 
1 0 0 <0004004e00000419051b0003000700200034005cbc002101bf002b000d01
5ab41010081a07be0157000200140169000800000158401804021ab11b06
0e303026109b0d0d04069c034126049c0143003ffdce3fed113910ed1239
2fce10deed012fddeddeed10fdc611392fedd4ed31300111211101112111
01140e022307230333323635342e0223233533321e0203140e0223222e02
35343e0233321e020419fc350339fd56025a27496941068a0c7b49421d3f
6143393772a56932f8111e271616281e11111e281616271e11051bfae505
1bfb6a0411fbef02bd375c4326850102422e1f38291897315068fda41626
1d10101d261616271c11111c2700>HIBBAA+Consolas,Bold AddT42Char 
HIBBAA+Consolas,Bold /CharStrings get begin
/quotedblleft 361 def
end
HIBBAA+Consolas,Bold /Encoding get
dup 147 /quotedblleft put
pop
end
%ADOEndSubsetFont
/HEQPQK+Consolas,Bold /HIBBAA+Consolas,Bold findfont ct_VMDictPut
/HEQPQK+Consolas,Bold*1 
[147{/.notdef}rp /quotedblleft 108{/.notdef}rp]
HEQPQK+Consolas,Bold nf
HEQPQK+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
203.271 188.03 mo
(\223)sh
%ADOBeginSubsetFont: PBAAAA+Consolas,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQJ+Consolas,Bold gcheck setglobal} if
1 5946 347 <0002017fffe902e70402001300270023b10519b80247b20f2314b8014db2
1e520ab8014db1004f003fed3fed012fc4fdc4313001321e0215140e0223
222e0235343e0213321e0215140e0223222e0235343e0202332642301c1c
3042262641311c1c3141262642301c1c3042262641311c1c314104021c31
42252642301c1c3042262542311cfd4f1c3042252642311c1c3142262542
301c>HEQPQJ+Consolas,Bold AddT42Char 
HEQPQJ+Consolas,Bold /CharStrings get begin
/colon 347 def
end
HEQPQJ+Consolas,Bold /Encoding get
dup 58 /colon put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQJ+Consolas,Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 5{/.notdef}rp /period 11{/.notdef}rp /colon 
2{/.notdef}rp /equal 17{/.notdef}rp /O 17{/.notdef}rp /a 2{/.notdef}rp /d 
/e /f 2{/.notdef}rp /i 4{/.notdef}rp /n 4{/.notdef}rp /s 
/t 3{/.notdef}rp /x 135{/.notdef}rp]
HEQPQJ+Consolas,Bold nf
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
212.694 188.03 mo
(:)sh
%ADOBeginSubsetFont: HIBBAA+Consolas,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQK+Consolas,Bold gcheck setglobal} if
1 1718 362 <00020037032b041405980017002f002ab11820bb0245002a00120244400b
08002a0018ae172f0d2554003f33d432ed32012fd6d6ed10fdc631300116
3635342e0235343e0233321e0215140e022325163635342e0235343e0233
321e0215140e0223024469701c221c152738232d452f193a73ae75fdf36a
6f1c221c152739232d452f193a73af7503c503343f232b272f291d362a19
26415730538c663a9a03343f232b272f291d362a1926415730538c663a00
>HEQPQK+Consolas,Bold AddT42Char 
HEQPQK+Consolas,Bold /CharStrings get begin
/quotedblright 362 def
end
HEQPQK+Consolas,Bold /Encoding get
dup 148 /quotedblright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQK+Consolas,Bold*1 
[147{/.notdef}rp /quotedblleft /quotedblright 107{/.notdef}rp]
HEQPQK+Consolas,Bold nf
HEQPQK+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
222.131 188.03 mo
(\224)sh
%ADOBeginSubsetFont: PBAAAA+Consolas,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQJ+Consolas,Bold gcheck setglobal} if
1 6394 384 <000100e5fe5c035a05d3000f001cb9000c01e040090800030f090856006d
003f3f012fc4d43232ed3130011612111402060607273612353402270175
f5f04881b46c8cc4c4c4c405d3ccfe27feef98fef2f0d15a8baf0198e0e2
01a4ae00>HEQPQJ+Consolas,Bold AddT42Char 
HEQPQJ+Consolas,Bold /CharStrings get begin
/parenright 384 def
end
HEQPQJ+Consolas,Bold /Encoding get
dup 41 /parenright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQJ+Consolas,Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 11{/.notdef}rp 
/colon 2{/.notdef}rp /equal 17{/.notdef}rp /O 17{/.notdef}rp /a 2{/.notdef}rp 
/d /e /f 2{/.notdef}rp /i 4{/.notdef}rp /n 4{/.notdef}rp 
/s /t 3{/.notdef}rp /x 135{/.notdef}rp]
HEQPQJ+Consolas,Bold nf
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
231.511 188.03 mo
(\))sh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Consolas,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQJ+Consolas,Bold gcheck setglobal} if
1 5772 346 <000200dffea002fe0402001b002f0027bc00210247002b0016024ab2000c
26b8014db51c4f1100c61b002fedc43fed012fc6edd4ed313017163e0235
342e0435343e0233321e0215140e022301321e0215140e0223222e023534
3e02df3c684d2c111a1d1a11162a3d27314e361c4487cc8801542642301c
1c3042262641311c1c3141c10212273c291d29211f232d201f3b2e1c2d4d
63365da47a4705621c3142252642301c1c3042262542311c>HEQPQJ+Consolas,Bold AddT42Char 
HEQPQJ+Consolas,Bold /CharStrings get begin
/semicolon 346 def
end
HEQPQJ+Consolas,Bold /Encoding get
dup 59 /semicolon put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQJ+Consolas,Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 11{/.notdef}rp 
/colon /semicolon /.notdef /equal 17{/.notdef}rp /O 17{/.notdef}rp /a 
2{/.notdef}rp /d /e /f 2{/.notdef}rp /i 4{/.notdef}rp /n 
4{/.notdef}rp /s /t 3{/.notdef}rp /x 135{/.notdef}rp]
HEQPQJ+Consolas,Bold nf
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
240.949 188.03 mo
(;)sh
171.486 37.94 mo
131.986 37.94 li
131.986 -.508049 li
171.486 -.508049 li
171.486 37.94 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 249.614 506.916 ]ct
[41.6348 0 0 40.584 -118.695 467.908 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 39 
/H 38 
/M[39 0 0 -38 0 38 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcP`L!<E2t!ri;\!<3-#!<3,W!<3)W!!!*!!94%_!<E6(":"f0"9eo2!WhNc%06G/!W`B,
!s8]."9S_f!!30$!rW*$!<E0$qZ+Y:"p"c-#71bIr=9)A$O?q=!WhQd!!3$%!sf,:#lXu/!s/Pr!;?Hn
!W<#q!P\U>"9o2C&JZ*"rYPkU'G1c["p+hm!!!*)!sAi7$OcqB#7CqI#m^\;!UKdj!<<*$!!*-"!<3)_
!!!)T!!WN0$ka?p*rR/\+:'&0)ANbj#6Y(r!!WH+"pt_I%f6b@%LWXL"U,"p!<*!#!!*)u!<N6%!rN)f
!!!)d!:^$n!sfAN)BBpr+p];6*>oIu#6Y(t!!WH,#7:hK%f-_A%hK3Z#mLJ6mf3@h!r`3!!W<!(!<<*#
!!!$"!VQNk!!!)U!!WH+#S%Rg+T<S],7#J:*Z>\##6Fqt!!NE,#7CtOrXeo<#7qIW$O?q?!V$-l!<<-#
!s&E&!Vl^!!<<*#!!1:D#6=l2%2Bj*,5!/b+s%X8$O-\*!!`N*"UGJF&.nUKrXf>G%gr[I"9S/p!!3#u
!!2`m!!3'!!!17C"p>5F)BU.IoHOM`*Z5Io!rrAp!!WH,#n7CV&G-P<&.T*R"Tn;r!Wi?%r;lNj!s&B%
!V69k!o3h^!!*-*%Mp00,4Zr^+WV:,"p4N!#6=i-#7D"Q&Fg>8%LWOE!q60i!V-3j!U0UE!!NB*#nn:#
n08,]+;tgt"9J5s"9AW3%1_k>"V;4Q#R(=k!;c`u!WW3$ci=4N"q;@i+n$WZ+<;.("9J8t"Tec0$P!a:
&HiUS$3^S+!!33&!UKdd!R:ZL!<NH9)'C-l,6]84((CEKq#CBq"TSW1%1j*>&Hr^U$j?\6p](Bs!!!&e
!!**#rW1CH"T\`3&K2bh,P*,`+s7^5#6O]$"T\]/#Rq:3&Hr^V$O?n;p](9pklC\`iW/EI"T\]3&f`+`
,6]86)%QoQp](Bt"UPY*&HiXV%0m",!!!&d!!<6&!!1LJ"T\]4&f`(_,6]86)%QoQp](Bt"pkb+&HiXV
%1!(0!!<6%!!2Ed!s&B%!R^rO!<`]@)^"Jm"X5$+%L3(1!!EB-$4[RC&bHY<&.]0T"8;cq!U0Ra!WE'!
!R^rP!<NN;)'C-o,Q8nk+s.U1"p4T#"p"`/#7M.Tmh#^7%grOC!qlTo!UKdg!<<-$f)YUH"Tel;(EXjj
,6f>9*Y\tb!VcWu!WrT6%hS4B"V;4T#mCA&!!<6&!!2Qhr;cp!!qcQJ!!EE4'HA7a,6]/-&IAO?pAb<s
"UY\Lmh#[4%1!+=p&G0r!<</s!;-<l!V69k!o!\[!<`Z=(a("Ho-4G`+s%L0#6OT!"p4u5$kEm\o+;-;
&.]0S"n_it!<<-#rW2Tj"p"`)!<<*#cN".N"UYq`+!U>%#9k?6)A*;Y!WE)p!!WK-":>SJ&G-P=&.f?[
#Qt4f!<*#A!!**'"pb_S*?QILpEKqf+s7j>%0ck7quHQn#6P/9$4[OW&GHe9&-WLM#Qk&-o`,3t!!*'#
!!!&o!<3)t!!!&D!!*0.":l:g+!UG(#9k60'b1KP!V69q!<i`:%1WsD&I&dW%1<CF"7H6g!VZQu!<E0$
!!!&k!!!)n!9O7f!X&f?'cS8<+sQt1#U1E6*Z>_&#QsSs#m(,2#RV"P%hK<N&I8pZ%LrpT#6Y(s!!!)t
!!!&p!!!'!!8.>P!qH=+!<NB0%MK[!+!;XL+!2UH*#B4s#QsPr'`e@:"U>;A%1a![&Io9^%LidP#Qt2&
!;HNt!WW3$!!3'!!!3'!"T\T(!<</R!!!)i!!iT,!sT,D'Gh\e)[@9!(D@8b#6XAo!<E66!<WK1$4@4O
$k*RS$OI(A"Tmog"9AK'!W`-!rVup!f`2!Rli7:o"UGJG%h]Hd#8%IU#mLM6!UB^i!sA`1#6tS6#Qk55
!sIig!!3#urrN&u!!3'!!!2Bc!!;Qgm/RXt!X&W2#RC_C#R1J8!WW8c!!E?*!<iW)"U+u1!<E0$kPt\c
!W`?"!!!)i!9jI`!p9Ok!<<0&"9Sc0!WiB'j8]Jf!<WB*!rrB&!U'O\!!**#rW2!Y!!:gRquP[T"9AN'
!!.ZOJcLB&JcNpnJ,~>

%%EndBinary
grestore
np
138.762 15.9107 mo
138.762 8.81912 144.498 3.09467 151.573 3.09467 cv
158.647 3.09467 164.383 8.81912 164.383 15.9107 cv
164.383 22.9879 158.647 28.7267 151.573 28.7267 cv
144.498 28.7267 138.762 22.9879 138.762 15.9107 cv
cp
1 /0 /CSD get_res sepcs
1 sep
ef
138.762 15.9107 mo
138.762 8.81915 144.498 3.09473 151.573 3.09473 cv
158.647 3.09473 164.383 8.81915 164.383 15.9107 cv
164.383 22.988 158.647 28.7267 151.573 28.7267 cv
144.498 28.7267 138.762 22.988 138.762 15.9107 cv
cp
gsave
[1.42341 0 0 -1.424 -12.134 512.132 ]ct
@
grestore newpath
151.573 28.7267 mo
151.573 59.4851 li
1.5 lw
1 lc
1 lj
gsave
[1.42341 0 0 -1.424 -12.134 512.132 ]ct
@
grestore newpath
157.295 58.0468 mo
151.573 69.4958 li
145.851 58.0468 li
157.295 58.0468 li
cp
ef
151.573 69.4958 mo
151.573 95.1279 li
[1.5 3 ] 0 dsh
gsave
[1.42341 0 0 -1.424 -12.134 512.132 ]ct
@
grestore newpath
151.573 95.1279 mo
151.074 95.1279 li
151.074 121.23 li
[] 0 dsh
gsave
[1.42341 0 0 -1.424 -12.134 512.132 ]ct
@
grestore newpath
156.797 119.806 mo
151.074 131.255 li
145.352 119.806 li
156.797 119.806 li
cp
ef
151.573 272.231 mo
151.573 297.863 li
[1.5 3 ] 0 dsh
gsave
[1.42341 0 0 -1.424 -12.134 512.132 ]ct
@
grestore newpath
151.573 294.36 mo
151.573 316.318 li
[] 0 dsh
gsave
[1.42341 0 0 -1.424 -12.134 512.132 ]ct
@
grestore newpath
157.295 314.894 mo
151.573 326.343 li
145.851 314.894 li
157.295 314.894 li
cp
ef
151.074 233.783 mo
151.473 275.022 li
gsave
[1.42341 0 0 -1.424 -12.134 512.132 ]ct
@
grestore newpath
157.181 273.541 mo
151.573 285.047 li
145.737 273.64 li
157.181 273.541 li
cp
ef
49.0884 428.865 mo
254.06 428.865 li
254.06 326.337 li
49.0884 326.337 li
cp
level3{
gsave
[1.42341 0 0 -1.424 -12.134 512.132 ]ct
<<
/PatternType 2
/Shading
/1 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [14.246 269.01 148.6 36.298 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~#6Or+#6Or+#6Or+#6Or+"p4i*"p4i*"p4i*"p4i*"p4i*"p4i*"p4i*"p+c)"p+c)"TeZ("TeZ("TeZ(
"TeZ("TeZ("TeZ("TeZ("TeZ("TeZ("TeZ("9JQ'"9AK&"9AK&"9AK&"9AK&"9AK&"9AK&"9AK&"9AK&
!s&B%!s&B%!s&B%!s&B%!s&B%!rr<$!rr<$!rr<$!rr<$!WW3#!WW3#!WW3#!WW3#!WW3#!WW3#!WW3#
!WW3#!<<*"!<<*"!<<*"!<<*"!<<*"!<<*"!<<*"zzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~&I8C;&I8C;&I8C;&I8C;&-r::&-r::&-i49&-i49&-i49%gN+8%gN+8%gN+8%gN+8%gN+8%L3"7%L3"7
%L3"7%L3"7%L)q6%0ch5%0ch5%0ch5%0ch5%0ch5%0ch5$jH_4$jH_4$jH_4$jH_4$jH_4$jH_4$O$P2
$O$P2$O$M1$O$M1$O$M1$O$M1$O$M1$3^D0$3^D0$3^D0$3^D0$3^D0$3^D0$3^D0#m:5.#m:5.#m:5.
#m:5.#m:5.#m:5.#m:5.#Qt,-#Qt,-#Qt,-#Qt,-#Qt,-#Qt,-#Qt,-#6Y#,#6Or+#6Or+#6Or+#6Or+
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~#6Or+#6Or+#6Or+#6Or+#6Y#,#Qt,-#Qt,-#Qt,-#Qt,-#Qt,-#Qt,-#Qt,-#m:5.#m:5.#m:5.#m:5.
#m:5.#m:5.#m:5.$3^D0$3^D0$3^D0$3^D0$3^D0$3^D0$3^D0$O$M1$O$M1$O$M1$O$M1$O$M1$O$P2
$O$P2$jH_4$jH_4$jH_4$jH_4$jH_4$jH_4%0ch5%0ch5%0ch5%0ch5%0ch5%0ch5%L)q6%L3"7%L3"7
%L3"7%L3"7%gN+8%gN+8%gN+8%gN+8%gN+8&-i49&-i49&-i49&-r::&-r::&I8C;&I8C;&I8C;&I8C;
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzz!<<*"!<<*"!<<*"!<<*"!<<*"!<<*"!<<*"!WW3#!WW3#!WW3#!WW3#!WW3#!WW3#!WW3#!W
W3#!rr<$!rr<$!rr<$!rr<$!s&B%!s&B%!s&B%!s&B%!s&B%"9AK&"9AK&"9AK&"9AK&"9AK&"9AK&"9
AK&"9AK&"9JQ'"TeZ("TeZ("TeZ("TeZ("TeZ("TeZ("TeZ("TeZ("TeZ("TeZ("p+c)"p+c)"p4i*"p
4i*"p4i*"p4i*"p4i*"p4i*"p4i*#6Or+#6Or+#6Or+#6Or+~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.22941 .38039 .5 .61961 .77059 ]
/Encode [1 0 1 0 1 0 1 0 1 0 1 0 ]
>>
>> /Gradient add_res /1 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1.42341 0 0 -1.424 -12.134 512.132 ]ct
/1 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzz!<E3%!<N<(!WiH+!s8W-"9\i1"9\l3"U,&6"pP89#6tJ>#RC\B#mgqG$4@4L$k*
OR%1NdW%hB0^&.f?_%h9'Y%1N^S$k!FN$47+H#mgkC#RCY?#6kA:"pP57"U,&4"9\i1"9S`.!s8W,!Wi
E)!<E3%!<<*"zzzzzzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3&!WiE)!WiE*!s8W-!s8W."9\i1"9er4"U,&5"pP89"pP;;
#6tJ<"pP89"pG/6"U,&5"9\i1"9\f/!s8W-!s8T+!WiE)!WiB'!<E3%!<E0#zzzzzzzzzzzzzzzzzzz!
!!!!~>
0 0 ]
>>
14.246 269.01 148.6 36.298 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/1 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
49.0884 428.865 mo
254.06 428.865 li
254.06 326.337 li
49.0884 326.337 li
cp
1 /0 /CSD get_res sepcs
1 sep
.75075 lw
2 lc
0 lj
2 ml
gsave
[1.42341 0 0 -1.424 -12.134 512.132 ]ct
@
grestore newpath
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
76.6513 383.542 mo
(s)sh
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
86.0814 383.542 mo
(.)sh
%ADOBeginSubsetFont: PBAAAA+Consolas,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQJ+Consolas,Bold gcheck setglobal} if
1 970 132 <0002008bffee041d0585001300240053b10102435558b10b1dbb020b0008
00000217b2140819b8013140090f50095320fc40055200183f1a4ded3f3f
ed012fd4ed10fdc431301bb90019013140090f50095320fc40055200183f
1a4ded3f3fed31305901140e022322262711331107363633321e0205342e
022322060711161633323e02041d4f8dc0716fbf57f40a3793675a8c5f32
ff00182d412a3e713f1d552c3a5f4324020e8ccc8741211c055afeb4c847
564885bd8054764c236456fe440b0e30587f>HEQPQJ+Consolas,Bold AddT42Char 
1 1832 137 <0003004cfe5c0425040c003d0050006000e6b10102435558b3300b3359b8
01d7b3033d190ebb01ae002b005101d640093328332b332b332319bb0213
0046003e0211402c236154c8081215f34a4c4a0b30030338284a0f081f08
020f03084a084a38613dcf3c4f5cca385041ca401e5600183f1a4ded3fed
3fed111239392f2f5f5e5d1239121739113310ed3210ed0110d6edd4ed11
39392f2f113910ed10ed10d6d6ed12393931301b402a54c8081215f34a4c
4a0b30030338284a0f081f08020f03084a084a38613dcf3c4f5cca385041
ca401e5600183f1a4ded3fed3fed111239392f2f5f5e5d12391217391133
10ed3210ed31305901161615140e0223222627060615141e0217171e0315
140e0223222e0235343e0237262635343e0237262635343e023332161721
1501141633323e0235342e0227270e0313141633323e0235342623220e02
03851c173b6b955a355a171118101f2b1bf151835e334081c07f7bb17136
122436253133121d261525313d6c95582d53220160fd21776c455f3c1a19
2d3d25d71d251507295f552d432c165f552d432c160346234d285582582d
150e11291a102019100109022544613e477e5d362746613a233c37341a1c
5832223b36321825694f55855b2f090bb2fc333b381a2a381e1b25190d02
0414242324031b515f1e324224555f1e3344>HEQPQJ+Consolas,Bold AddT42Char 
1 2718 148 <000100b400000411040e0017006fb10102435558b10d09bb0211000a0017
020cb2000a08b8013eb20dca05b80107400a40125017170a0b4f0a510018
3f3f12392f3f1a4ded7cfd18ed012fd4ed10ed3231301bb90008013eb20d
ca05b80107400a40125017170a0b4f0a5100183f3f12392f3f1a4ded7cfd
18ed31305901362e022322060711231133173e0333321e02070319020f21
301f367345fadd09193f4d5e384d77512703026d395034185966fd7d03f8
94273e2d1835689d6700>HEQPQJ+Consolas,Bold AddT42Char 
1 3392 151 <00010089ffe903db03f800170059b10102435558b10c0abb020b00070001
020bb316174f04b8013140094011520c090a51094f00183f3f12393f1a4d
ed3f012fedd4ed3331301bb2174f04b8013140094011520c090a51094f00
183f3f12393f1a4ded3f313059011114163332363711331123270e032322
2e023511017d3e3f3d713ff4d30620424d5b374e754e2703f8fd6a535565
560283fc089627402d19335e835102aa>HEQPQJ+Consolas,Bold AddT42Char 
HEQPQJ+Consolas,Bold /CharStrings get begin
/b 132 def
/g 137 def
/r 148 def
/u 151 def
end
HEQPQJ+Consolas,Bold /Encoding get
dup 98 /b put
dup 103 /g put
dup 114 /r put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQJ+Consolas,Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 11{/.notdef}rp 
/colon /semicolon /.notdef /equal 17{/.notdef}rp /O 17{/.notdef}rp /a 
/b /.notdef /d /e /f /g /.notdef /i 
4{/.notdef}rp /n 3{/.notdef}rp /r /s /t /u 2{/.notdef}rp 
/x 135{/.notdef}rp]
HEQPQJ+Consolas,Bold nf
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
95.5115 383.542 mo
(substring)
[9.58531 9.5853 8.54121 9.58531 9.58531 9.58531 9.58531 8.5412 0 ]xsh
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
180.24 383.542 mo
(\()sh
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
189.635 383.542 mo
(a)sh
%ADOBeginSubsetFont: PBAAAA+Consolas,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQJ+Consolas,Bold gcheck setglobal} if
1 5668 345 <000100d3fea002f20175001b0016b90016024ab5000c1100c61b002fedc4
012fc6ed313017163e0235342e0435343e0233321e0215140e0223d33c68
4d2c111a1d1a11162a3d27314e361c4488cb88c10212273c291d29211f23
2d201f3b2e1c2d4d63365da47a47>HEQPQJ+Consolas,Bold AddT42Char 
HEQPQJ+Consolas,Bold /CharStrings get begin
/comma 345 def
end
HEQPQJ+Consolas,Bold /Encoding get
dup 44 /comma put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQJ+Consolas,Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period 11{/.notdef}rp /colon /semicolon /.notdef /equal 17{/.notdef}rp /O 
17{/.notdef}rp /a /b /.notdef /d /e /f /g 
/.notdef /i 4{/.notdef}rp /n 3{/.notdef}rp /r /s /t 
/u 2{/.notdef}rp /x 135{/.notdef}rp]
HEQPQJ+Consolas,Bold nf
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
199.072 383.542 mo
(,)sh
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
208.495 383.542 mo
(b)sh
HEQPQJ+Consolas,Bold*1 [17.1165 0 0 -17.1236 0 0 ]msf
217.889 383.542 mo
(\))sh
%ADOBeginSubsetFont: QJJAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /QJJAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9dcd866000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c79669cb9ffc600008f640000456a68656164f05c337b00000f640000
0036686865610dad0c0b00000f9c00000024686d74784a9d28cc00000fc0
00002fe26c6f6361d0f4e25300003fa400001e506d617870213725250000
5df4000000206e616d651ead718300005e1400000d3e707265706baf02fe
00006b5400002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
208e0600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005deb890bb1e7c5f0f3cf500190800
00000000bbeb7ccc00000000cf588d38fbfafd8b09ec0836000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
0000000000000000000008ca040e0000000000000000000001cf00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
042200ac0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000052200aa000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000003f40010
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000040400a10000000000000000
00000000000000000000000000000000046500a100000000000000000000
0000038000a1000000000000000000000000000000000000000000000000
000000000000000000000000000000000482006c00000000000000000000
00000000000000000000000000000000000001ec00a10000000000000000
000000000000000000000000000000000000000001ec0011000000000000
0000000000000000000003c900a10000000002e000a10000000000000000
000000000000000000000000060600a1049100a100000000000000000000
0000000000000000000004aa006600000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000003c5
00a1000000000000000003ed00a100000000000000000000000000000000
00000000000000000000000000000000000000000359001c000000000000
000000000000048d009f0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003d5005c0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000434009900000000000000000000
000000000000000000000000000000000000000000000000000000000000
0434006000000000000000000000000003fb005d00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000003c400350000000000000000000000000000000004340060
0000000000000000000000000000000000000000000000000000000001d6
008500000000000000000000000000000000000000000000000000000000
0000000001d60099000000000000000000000000000000000000000003a3
0099000000000000000001d6009900000000000000000000000000000000
000000000000000004340099000000000000000000000000000000000000
0000000000000438005a0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000002ca00990000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000002ae0021000000000000000000000000000000000475002100000000
000000000000000000000000000000000000000000000000000000000475
0021051300210000000006d9002100000000000000000000000000000000
0000000000000000000000000000000006d9002104340094000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000002ac004402e5006c0000
000002e5004802b80047000000000297002a000000000163006100000000
0297006c015e006c0000000002e6006c02e60045000000000000000001f6
006c0000000001e3002302e9006c00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000001d6000001ce000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000026000ed0000000000000000
0000000001ff002a00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000026d0085026d007a00000000
000000000284005602840075024000840240007a0000000000000000026d
0085026d007a000000000000000002840056028400750000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000002cb002303ec0062
000000000000000000000000000000000000000000000000000000000000
0000040e00ae040e00720000000000000000000000000000000000000000
000000000000000000000000028d00190381005c00000000000000000000
00000000000000000000000000000000000000000000039f008d039f0065
000000000000000000000000000000000000000000000000000000000000
000002cb002303ec00620000000000000000000000000000000000000000
000000000000000000000000040e00ae040e007200000000000000000000
0000000000000000000000000000000000000000000001f8002302b0004b
000000000000000000000000000000000000000000000000000000000000
00000000000002d0005701bc006001bc00580000000001f8002302b0004b
000000000000000000000000000000000000000000000000000000000000
00000000000002d0005701bc006001bc00580000000001f500310252003c
000000000000000000000000000000000000000000000000000000000000
000001f500310252003c0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000003fc005e0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000046d008e000000000000000002d8008e00000000000000000000
000000000000031400570000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000046d008e0000000000000000000000000000000002d8008e00000000
000000000314005700000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a1014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e01c7
01c701c701c701c701c701c701c701c701c701c701c701c701c701c701c7
01c702520252025202520252025202520252025202520252025202520252
025202520252025202520252025202520252025202520252025202b802b8
02b802b802b802b802b802b802b802b802b802b802b80328032803280328
032803280328036a036a036a036a03c303c303c303c303c303c303c303c3
03c303c303c3043a043a043a043a043a043a043a043a0466046604660466
04660466046604660471047104710471047104e504e5051a051a051a051a
051a051a059005fc05fc05fc05fc05fc05fc064a064a064a064a064a064a
064a064a064a064a064a064a06a106a106a1071b071b071b071b071b071b
071b071b071b071b075c075c075c075c07ac07ac07ac07ac07ac07ac07ac
07ac07ac07ac07ac07ac07ac07ac07ac07ac07ac07ac07ac07ac07ac07ac
07ac07ac07ac07ac07ac085b085b085b085b085b085b085b085b085b085b
085b085b085b08f408f408f408f408f408f408f408f408f408f408f4098b
098b098b098b0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c
0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c
0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c
0a2c0a2c0a2c0a2c0a2c0a2c0a2c0a2c0b190b190b190b190b190ba90ba9
0ba90ba90ba90ba90ba90ba90c220c220c220c220c220c220c220c220c22
0c4e0c4e0c4e0c4e0c4e0c4e0ce80ce80ce80d2b0d2b0d2b0d2b0d2b0d2b
0d2b0dbc0dbc0dbc0dbc0dbc0dbc0dbc0e4a0e4a0e4a0e4a0e4a0e4a0e4a
0e4a0e4a0e4a0e4a0e4a0e4a0e4a0e4a0ec30ec30ec30ec30ec30ec30ec3
0ec30ec30ec30ec30ec30ec30ec30f3f0f3f0f3f0f3f0f3f0f4b0f4b0f4b
0f4b0f4b0f4b0f4b0f4b0f4b0fc110731073107f107f107f107f107f107f
107f107f107f113e11ce11ce11ce11ce11ce11ce11ce11ce11ce11ce11ce
11ce11ce11ce11ce11ce11ce11ce11ce11ce11ce11ce11ce11ce11ce11ce
11ce11ce11ce11ce124412ad12ad131313771377143a143a147e147e14e8
15141514156a15b315b315b316061606166016b916b916b916b916b916b9
16b916b916b916b916b916b916b916b916b916b916b916b916b916b916b9
16b916b916b916b916b916b916b916b916b916b916b916b916b916b916b9
16b916b916b916b916b916b916b916b916b916b916b916b916b916b916b9
16b916b916b916b916b916b916b916b916b916b916b916dd170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117011701170117011701170117011701170117011701
170117011701170117461746174617461746174617461794179417941794
17c517c517c517c517c517c517c517c517c517c517c517c517c517c517c5
17c517c517c517c517c517c517c517c517c517c517c517c517c517c517c5
17c517c517c517c517c517c517c517c517c517c517c5180e185e185e185e
18d81954199c19e619e619e619ee19f619f619f619fe1a061a061a061a06
1a061a061a061a061a061a061a4c1a4c1a4c1a4c1a4c1a4c1a4c1a4c1a4c
1a4c1a4c1a4c1a4c1a4c1a4c1a4c1a4c1a4c1a4c1a4c1a4c1a4c1a4c1a4c
1a4c1a4c1a4c1a4c1a4c1a4c1a4c1a4c1a4c1a4c1a4c1a4c1a8f1b061b06
1b061b061b061b061b061b061b061b621bd01bd01bd01bd01bd01bd01bd0
1bd01bd01c131c851c851c851c851c851c851c851c851c851cde1ce61ce6
1ce61ce61ce61ce61ce61ce61ce61d281da01da01da01da01da01da01da0
1da01da01e571ef71ef71ef71ef71ef71ef71ef71ef71ef71f001f091f09
1f091f091f091f091f091f091f091f091f121f1b1f241f241f671fc91fc9
1fc91fc91fc91fc91fc91fc91fc91fc9200120482090209020d221392139
21392139213921392139213921392142214b214b214b214b214b214b214b
214b214b214b214b214b214b214b214b214b214b214b214b214b214b214b
214b214b214b214b214b214b214b214b214b214b214b2186218621862186
218621862186218621862186218621862186218621862186218621862186
218621862186218621862186218621862186218621862186218621862186
218621862186218621862186218621862186218621862186218621862186
218621862186218621862186218621862186218621862186218621862186
218621862186218621862186218621862186218621862186218621862186
218621862186218621862186218621862186218621862186218621862186
218621862186218621862186218621862186218621862186218621862186
218621862186218621862186218621862186218621862186218621862186
218621862186218621862186218621862186218621862186218621862186
218621862186218621862186218621862186218621862186218621862186
218621862186218621862186218621862186218621862186218621862186
218621862186218621862186218621862186218621862186218621862186
218621862186218621862186218621862186218621862186218621862186
218621862186218621862186218621862186218621862186218621862186
218621862186218621862186218621862186218621862186218621862186
218e218e218e21962196219621962196219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e219e219e219e219e219e219e219e219e
219e219e219e219e219e219e219e220f220f220f220f220f226322632263
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b522b522b522b522b5
22b522b522b522b522b522b522b522b522b522b522b5000100000f27006b
00050078000300020010002f0065000011902410000200010000002d0222
0000000300000000006400000000000300000001000e0064000000030000
0002000e03040000000300000003002403120000000300000004000e0064
0000000300000005001803360000000300000006000e0064000000030000
00070076034e0000000300000008002a000e0000000300000009002003c4
000000030000000a02a00064000000030000000b005603e4000000030000
000c002a043a000000030000000d02980464000000030000000e006c06fc
00010000000000000032076800010000000000010007079a000100000000
0002000708ea0001000000000003001208f100010000000000040007079a
0001000000000005000c090300010000000000060007079a000100000000
0007003b090f00010000000000080015076f00010000000000090010094a
000100000000000a0150079a000100000000000b002b095a000100000000
000c00150985000100000000000d014c099a000100000000000e00360ae6
0003000104090000006400000003000104090001000e0064000300010409
0002000e03040003000104090003002403120003000104090004000e0064
0003000104090005001803360003000104090006000e0064000300010409
00070076034e0003000104090008002a000e0003000104090009002003c4
000300010409000a02a00064000300010409000b005603e4000300010409
000c002a043a000300010409000d02980464000300010409000e006c06fc
00a9002000320030003100340020004d006900630072006f0073006f0066
007400200043006f00720070006f0072006100740069006f006e002e0020
0041006c006c002000520069006700680074007300200052006500730065
0072007600650064002e00430061006c0069006200720069002000690073
002000610020006d006f006400650072006e002000730061006e00730020
00730065007200690066002000660061006d0069006c0079002000770069
0074006800200073007500620074006c006500200072006f0075006e0064
0069006e006700730020006f006e0020007300740065006d007300200061
006e006400200063006f0072006e006500720073002e0020004900740020
006600650061007400750072006500730020007200650061006c00200069
00740061006c006900630073002c00200073006d0061006c006c00200063
006100700073002c00200061006e00640020006d0075006c007400690070
006c00650020006e0075006d006500720061006c00200073006500740073
002e0020004900740073002000700072006f0070006f007200740069006f
006e007300200061006c006c006f00770020006800690067006800200069
006d007000610063007400200069006e002000740069006700680074006c
007900200073006500740020006c0069006e006500730020006f00660020
00620069006700200061006e006400200073006d0061006c006c00200074
00650078007400200061006c0069006b0065002e002000430061006c0069
006200720069002700730020006d0061006e007900200063007500720076
0065007300200061006e006400200074006800650020006e006500770020
00720061007300740065007200690073006500720020007400650061006d
00200075007000200069006e002000620069006700670065007200200073
0069007a0065007300200074006f002000720065007600650061006c0020
00610020007700610072006d00200061006e006400200073006f00660074
0020006300680061007200610063007400650072002e0052006500670075
006c00610072004d006900630072006f0073006f00660074003a00200043
0061006c006900620072006900560065007200730069006f006e00200035
002e0038003700430061006c006900620072006900200069007300200061
002000740072006100640065006d00610072006b0020006f006600200074
006800650020004d006900630072006f0073006f00660074002000670072
006f007500700020006f006600200063006f006d00700061006e00690065
0073002e004c007500630028006100730029002000640065002000470072
006f006f00740068007400740070003a002f002f007700770077002e006d
006900630072006f0073006f00660074002e0063006f006d002f00740079
0070006f006700720061007000680079002f006300740066006f006e0074
00730068007400740070003a002f002f0066006f006e0074006600610062
00720069006b002e0063006f006d0059006f00750020006d006100790020
0075007300650020007400680069007300200066006f006e007400200061
00730020007000650072006d006900740074006500640020006200790020
007400680065002000450055004c004100200066006f0072002000740068
0065002000700072006f006400750063007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200069
007300200069006e0063006c007500640065006400200074006f00200064
006900730070006c0061007900200061006e00640020007000720069006e
007400200063006f006e00740065006e0074002e00200059006f00750020
006d006100790020006f006e006c0079002000280069002900200065006d
0062006500640020007400680069007300200066006f006e007400200069
006e00200063006f006e00740065006e0074002000610073002000700065
0072006d0069007400740065006400200062007900200074006800650020
0065006d00620065006400640069006e0067002000720065007300740072
0069006300740069006f006e007300200069006e0063006c007500640065
006400200069006e0020007400680069007300200066006f006e0074003b
00200061006e006400200028006900690029002000740065006d0070006f
0072006100720069006c007900200064006f0077006e006c006f00610064
0020007400680069007300200066006f006e007400200074006f00200061
0020007000720069006e0074006500720020006f00720020006f00740068
006500720020006f00750074007000750074002000640065007600690063
006500200074006f002000680065006c00700020007000720069006e0074
00200063006f006e00740065006e0074002e0068007400740070003a002f
002f007700770077002e006d006900630072006f0073006f00660074002e
0063006f006d002f007400790070006f006700720061007000680079002f
0066006f006e00740073002f00640065006600610075006c0074002e0061
007300700078a92032303134204d6963726f736f667420436f72706f7261
74696f6e2e20416c6c205269676874732052657365727665642e43616c69
6272692069732061206d6f6465726e2073616e732073657269662066616d
696c79207769746820737562746c6520726f756e64696e6773206f6e2073
74656d7320616e6420636f726e6572732e20497420666561747572657320
7265616c206974616c6963732c20736d616c6c20636170732c20616e6420
6d756c7469706c65206e756d6572616c20736574732e204974732070726f
706f7274696f6e7320616c6c6f77206869676820696d7061637420696e20
74696768746c7920736574206c696e6573206f662062696720616e642073
6d616c6c207465787420616c696b652e2043616c696272692773206d616e
792063757276657320616e6420746865206e657720726173746572697365
72207465616d20757020696e206269676765722073697a657320746f2072
657665616c2061207761726d20616e6420736f6674206368617261637465
722e526567756c61724d6963726f736f66743a2043616c69627269566572
73696f6e20352e383743616c6962726920697320612074726164656d6172
6b206f6620746865204d6963726f736f66742067726f7570206f6620636f
6d70616e6965732e4c7563286173292064652047726f6f74687474703a2f
2f7777772e6d6963726f736f66742e636f6d2f7479706f6772617068792f
6374666f6e7473687474703a2f2f666f6e7466616272696b2e636f6d596f
75206d617920757365207468697320666f6e74206173207065726d697474
6564206279207468652045554c4120666f72207468652070726f64756374
20696e207768696368207468697320666f6e7420697320696e636c756465
6420746f20646973706c617920616e64207072696e7420636f6e74656e74
2e20596f75206d6179206f6e6c792028692920656d626564207468697320
666f6e7420696e20636f6e74656e74206173207065726d69747465642062
792074686520656d62656464696e67207265737472696374696f6e732069
6e636c7564656420696e207468697320666f6e743b20616e642028696929
2074656d706f726172696c7920646f776e6c6f6164207468697320666f6e
7420746f2061207072696e746572206f72206f74686572206f7574707574
2064657669636520746f2068656c70207072696e7420636f6e74656e742e
687474703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f67
72617068792f666f6e74732f64656661756c742e61737078000000>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[15945 1827 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 668 87 <000200acfffa03c7050e001c00290078b12406b8ffe8b310014d06b8fff0
b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b014d06b8
02114017111d1810014d1d100f014d1d100c0d014c1d200b014d1db80232
b2001125b8010ab306060c23b8010bb315510c55003f3fed12392fed012f
d4e12b2b2b2b10e12b2b2b2b2b32313001140e02232311140e0223222e02
351134363321321e0407342e0223231133323e0203c74077ad7893091321
19192114082a1a01152a4d696d4c29b53b575d2c9f9b4e6746240393619c
6e3cfe2e080c070505070c0804aa282207173f5c79574f6a340efdf92847
6300>QJJAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>QJJAAA+Calibri AddT42Char 
QJJAAA+Calibri /CharStrings get begin
/P 87 def
end
QJJAAA+Calibri /Encoding get
dup 80 /P put
pop
end
%ADOEndSubsetFont
/HEQPQL+Calibri /QJJAAA+Calibri findfont ct_VMDictPut
/HEQPQL+Calibri*1 
[80{/.notdef}rp /P 175{/.notdef}rp]
HEQPQL+Calibri nf
HEQPQL+Calibri*1 [25.6926 0 0 -25.7032 0 0 ]msf
-.0350132 190.593 mo
(P)sh
%ADOBeginSubsetFont: QJJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQL+Calibri gcheck setglobal} if
2 15168 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>HEQPQL+Calibri AddT42Char 
HEQPQL+Calibri /CharStrings get begin
/one 1005 def
end
HEQPQL+Calibri /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQL+Calibri*1 
[49{/.notdef}rp /one 30{/.notdef}rp /P 175{/.notdef}rp]
HEQPQL+Calibri nf
HEQPQL+Calibri*1 [25.6926 0 0 -25.7032 0 0 ]msf
13.2383 190.593 mo
(1)sh
HEQPQL+Calibri*1 [25.657 0 0 -25.6676 0 0 ]msf
-.0350132 383.257 mo
(P)sh
%ADOBeginSubsetFont: QJJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQL+Calibri gcheck setglobal} if
2 15534 1006 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>HEQPQL+Calibri AddT42Char 
HEQPQL+Calibri /CharStrings get begin
/two 1006 def
end
HEQPQL+Calibri /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQL+Calibri*1 
[49{/.notdef}rp /one /two 29{/.notdef}rp /P 175{/.notdef}rp]
HEQPQL+Calibri nf
HEQPQL+Calibri*1 [25.657 0 0 -25.6676 0 0 ]msf
13.2383 383.257 mo
(2)sh
%ADOBeginSubsetFont: QJJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQL+Calibri gcheck setglobal} if
2 5970 349 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>HEQPQL+Calibri AddT42Char 
2 6742 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>HEQPQL+Calibri AddT42Char 
HEQPQL+Calibri /CharStrings get begin
/i 349 def
/n 374 def
end
HEQPQL+Calibri /Encoding get
dup 105 /i put
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQL+Calibri*1 
[49{/.notdef}rp /one /two 29{/.notdef}rp /P 24{/.notdef}rp /i 4{/.notdef}rp 
/n 145{/.notdef}rp]
HEQPQL+Calibri nf
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
162.661 113.27 mo
(in)
[4.30609 0 ]xsh
%ADOBeginSubsetFont: QJJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQL+Calibri gcheck setglobal} if
2 12170 894 <00010085fea701f3058b00230022401503100b014d03100f014d03100c0d
014c03151f0b85003f2f012f332b2b2b3130010602151412171616060623
222e02272e0335343e02373e0333321e0201ef5f5d5f5b05010e1d19121a
130c033652381c1f3952330109101c16171c10020562c9fe59d6d7fe5acb
0c110b050206080566d1d8dd7171dcd9d26704060603060a1000>HEQPQL+Calibri AddT42Char 
HEQPQL+Calibri /CharStrings get begin
/parenleft 894 def
end
HEQPQL+Calibri /Encoding get
dup 40 /parenleft put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQL+Calibri*1 
[40{/.notdef}rp /parenleft 8{/.notdef}rp /one /two 29{/.notdef}rp /P 24{/.notdef}rp 
/i 4{/.notdef}rp /n 145{/.notdef}rp]
HEQPQL+Calibri nf
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
177.749 113.27 mo
(\()sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
183.799 113.27 mo
(P)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
194.118 113.27 mo
(1)sh
%ADOBeginSubsetFont: QJJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQL+Calibri gcheck setglobal} if
2 12316 895 <0001007afea701e7058b00210033b90012fff0b30b014d12b8fff0b30f01
4d12b8fff0b50c0d014c1200b8ffc0b60b014d001a0a85003f2f012f2b32
2b2b2b313001140e02070e03232226263637361235340227263e0233321e
0217161201e71c385136030c131a121a1d0d01055c5e5e5e0402101c1715
1c1108026775021971ddd8d16605080602050b110cca01a7d7d601a7c909
100a0603060604cdfe4f>HEQPQL+Calibri AddT42Char 
HEQPQL+Calibri /CharStrings get begin
/parenright 895 def
end
HEQPQL+Calibri /Encoding get
dup 41 /parenright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQL+Calibri*1 
[40{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two 29{/.notdef}rp /P 
24{/.notdef}rp /i 4{/.notdef}rp /n 145{/.notdef}rp]
HEQPQL+Calibri nf
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
204.253 113.27 mo
(\))sh
%ADOBeginSubsetFont: QJJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQL+Calibri gcheck setglobal} if
2 7032 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>HEQPQL+Calibri AddT42Char 
2 7558 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>HEQPQL+Calibri AddT42Char 
2 8828 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>HEQPQL+Calibri AddT42Char 
HEQPQL+Calibri /CharStrings get begin
/o 381 def
/t 410 def
/u 437 def
end
HEQPQL+Calibri /Encoding get
dup 111 /o put
dup 116 /t put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQL+Calibri*1 
[40{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two 29{/.notdef}rp /P 
24{/.notdef}rp /i 4{/.notdef}rp /n /o 4{/.notdef}rp /t /u 
138{/.notdef}rp]
HEQPQL+Calibri nf
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
175.586 264.527 mo
(out)
[10.7081 10.6674 0 ]xsh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
203.299 264.527 mo
(\()sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
209.349 264.527 mo
(P)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
219.669 264.527 mo
(1)sh
%ADOBeginSubsetFont: QJJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQL+Calibri gcheck setglobal} if

2 0 3 <> HEQPQL+Calibri AddT42Char 
3 1102 1089 <0002005e0138039d0349000d001b001db4000e07150bbc010a0004001101
0a0018002fedd6ed012f33cd323130011406232122263534363321321611
14062321222635343633213216039d170ffd0c0f16141102f41214170ffd
0c0f16141102f412140303281f1f28242222fe57281e1e2825222200>HEQPQL+Calibri AddT42Char 
HEQPQL+Calibri /CharStrings get begin
/space 3 def
/equal 1089 def
end
HEQPQL+Calibri /Encoding get
dup 32 /space put
dup 61 /equal put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQL+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two 
10{/.notdef}rp /equal 18{/.notdef}rp /P 24{/.notdef}rp /i 4{/.notdef}rp /n 
/o 4{/.notdef}rp /t /u 138{/.notdef}rp]
HEQPQL+Calibri nf
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
229.803 264.527 mo
(\) = )
[6.3801 4.267 9.61101 0 ]xsh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
254.827 264.527 mo
(in)
[4.30609 0 ]xsh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
269.915 264.527 mo
(\()sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
275.965 264.527 mo
(P)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
286.284 264.527 mo
(1)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
296.419 264.527 mo
(\) )
[6.40567 0 ]xsh
%ADOBeginSubsetFont: QJJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQL+Calibri gcheck setglobal} if
2 910 104 <000100aaffed04790514002b0099401d602d01201810014d20100f014d20
100d014d200a0c014d20180b014d20b802104011004015014d004013014d
004011014d0016b8ffe8b310014d16b8fff0b30f014d16b8fff0b30d014d
16b8fff6b30c014d16b8ffe8b30b014d16ba0210000affc0b315014d0ab8
ffc0400913014d0a265210521bb80129b10556003fed3f3f012f2b2be12b
2b2b2b2bd42b2b2be12b2b2b2b2b31305d01140e0223222e023511343e02
33321e021511141e0233323e023511343e0233321e021504794580b8756b
b07e440814201a182213082c5375494b75512b081421191821130901de76
b980423e79b6770323080c070505070c08fcf25a86592d2c588257031708
0c070505070c0800>HEQPQL+Calibri AddT42Char 
2 3928 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>HEQPQL+Calibri AddT42Char 
HEQPQL+Calibri /CharStrings get begin
/U 104 def
/a 258 def
end
HEQPQL+Calibri /Encoding get
dup 85 /U put
dup 97 /a put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQL+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two 
10{/.notdef}rp /equal 18{/.notdef}rp /P 4{/.notdef}rp /U 11{/.notdef}rp /a 
7{/.notdef}rp /i 4{/.notdef}rp /n /o 4{/.notdef}rp /t /u 
138{/.notdef}rp]
HEQPQL+Calibri nf
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
306.995 264.527 mo
(U a)
[12.8417 4.267 0 ]xsh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
166.675 305.894 mo
(in)
[4.30609 0 ]xsh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
181.777 305.894 mo
(\()sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
187.827 305.894 mo
(P)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
198.175 305.894 mo
(2)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
208.281 305.894 mo
(\))sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
160.953 458.017 mo
(out)
[10.7081 10.6675 0 ]xsh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
188.681 458.017 mo
(\()sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
194.73 458.017 mo
(P)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
205.05 458.017 mo
(2)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
215.185 458.017 mo
(\) = )
[6.3801 4.267 9.61101 0 ]xsh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
240.194 458.017 mo
(in)
[4.30609 0 ]xsh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
255.297 458.017 mo
(\()sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
261.346 458.017 mo
(P)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
271.666 458.017 mo
(2)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
281.801 458.017 mo
(\) )
[6.4057 0 ]xsh
%ADOBeginSubsetFont: GFNBAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /GFNBAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9dcda01000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c79666ee359e10000988400000b9c68656164f05c337b00000f640000
0036686865610dad109b00000f9c00000024686d74783d8c08c000000fc0
000039026c6f636148b14c94000048c400001e506d617870213424cd0000
6714000000206e616d651ead71830000673400000d3e707265706baf02fe
0000747400002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
22290600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005deb85888c9fd5f0f3cf500190800
00000000bbeb7ccc00000000cf588d38fbfafd8b09ec0836000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000d5a040e0000000000000000000001cf00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000046500a100000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000060600a10000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000003ed00a100000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
043400600000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000002ca00990000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000002e50048000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000001f6
006c00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000026000ed0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000046d008e00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000046d008e000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000059d00e6
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a1014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e01900190019001900190019001900190019001900190019001900190
019001900190019001900190019001900190019001900190019001900190
019001900190019001900190019001900190019001900190019001900190
020602060206020602060206020602060206020602060206020602060206
020602060206020602060206020602800280028002800280028002800280
028002800280028002800280028002800280028002800280028002800280
028002800280028002800280028002800280028002800280028002800280
028002800280028002800280028002800280028002800280028002800280
028002800280028002800280028002800280028002800280031703170317
031703170317031703170317031703170317031703170317031703170317
031703170317031703170317031703170317031703170317031703170317
031703170317031703170317031703170317031703170317031703170317
031703170317031703170317031703170317031703170317031703170317
031703170317031703170317031703170317031703170317031703170317
031703170317031703170317031703170317031703170317031703170317
031703170317031703170317031703170317031703170317031703170317
031703170317031703170317039003900390039003900390039003900390
039003900390039003900390039003900390039003900390039003900390
039003900390039003900390039003900390039003900390039003900390
039003900390039003900390039003900390039003900390039003900390
039003900390039003900390039003900390039003900390039003900390
0390039003900390039003f603f603f603f603f603f603f603f603f603f6
03f603f603f603f604490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
044904490449044904490449044904490449044904490449044904490449
04490449048e048e048e048e048e048e048e04dc04dc04dc04dc04dc04dc
04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc
04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc
04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc
04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc04dc
04dc04dc04dc04dc05220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
052205220522052205220522052205220522052205220522052205220522
0522052205220522052205220522052205220522052205220522052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a052a052a052a052a052a052a052a052a052a052a
052a052a052a052a052a059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce000100000f27004f0005003c
000100020010002f0065000011902410000100010000002d022200000003
00000000006400000000000300000001000e00640000000300000002000e
03040000000300000003002403120000000300000004000e006400000003
00000005001803360000000300000006000e006400000003000000070076
034e0000000300000008002a000e0000000300000009002003c400000003
0000000a02a00064000000030000000b005603e4000000030000000c002a
043a000000030000000d02980464000000030000000e006c06fc00010000
000000000032076800010000000000010007079a00010000000000020007
08ea0001000000000003001208f100010000000000040007079a00010000
00000005000c090300010000000000060007079a0001000000000007003b
090f00010000000000080015076f00010000000000090010094a00010000
0000000a0150079a000100000000000b002b095a000100000000000c0015
0985000100000000000d014c099a000100000000000e00360ae600030001
04090000006400000003000104090001000e00640003000104090002000e
03040003000104090003002403120003000104090004000e006400030001
04090005001803360003000104090006000e006400030001040900070076
034e0003000104090008002a000e0003000104090009002003c400030001
0409000a02a00064000300010409000b005603e4000300010409000c002a
043a000300010409000d02980464000300010409000e006c06fc00a90020
00320030003100340020004d006900630072006f0073006f006600740020
0043006f00720070006f0072006100740069006f006e002e00200041006c
006c00200052006900670068007400730020005200650073006500720076
00650064002e00430061006c006900620072006900200069007300200061
0020006d006f006400650072006e002000730061006e0073002000730065
007200690066002000660061006d0069006c007900200077006900740068
00200073007500620074006c006500200072006f0075006e00640069006e
006700730020006f006e0020007300740065006d007300200061006e0064
00200063006f0072006e006500720073002e002000490074002000660065
0061007400750072006500730020007200650061006c0020006900740061
006c006900630073002c00200073006d0061006c006c0020006300610070
0073002c00200061006e00640020006d0075006c007400690070006c0065
0020006e0075006d006500720061006c00200073006500740073002e0020
004900740073002000700072006f0070006f007200740069006f006e0073
00200061006c006c006f00770020006800690067006800200069006d0070
00610063007400200069006e002000740069006700680074006c00790020
0073006500740020006c0069006e006500730020006f0066002000620069
006700200061006e006400200073006d0061006c006c0020007400650078
007400200061006c0069006b0065002e002000430061006c006900620072
0069002700730020006d0061006e00790020006300750072007600650073
00200061006e006400200074006800650020006e00650077002000720061
007300740065007200690073006500720020007400650061006d00200075
007000200069006e0020006200690067006700650072002000730069007a
0065007300200074006f002000720065007600650061006c002000610020
007700610072006d00200061006e006400200073006f0066007400200063
00680061007200610063007400650072002e0052006500670075006c0061
0072004d006900630072006f0073006f00660074003a002000430061006c
006900620072006900560065007200730069006f006e00200035002e0038
003700430061006c00690062007200690020006900730020006100200074
0072006100640065006d00610072006b0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000670072006f0075
00700020006f006600200063006f006d00700061006e006900650073002e
004c007500630028006100730029002000640065002000470072006f006f
00740068007400740070003a002f002f007700770077002e006d00690063
0072006f0073006f00660074002e0063006f006d002f007400790070006f
006700720061007000680079002f006300740066006f006e007400730068
007400740070003a002f002f0066006f006e007400660061006200720069
006b002e0063006f006d0059006f00750020006d00610079002000750073
00650020007400680069007300200066006f006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
0065002000450055004c004100200066006f007200200074006800650020
00700072006f006400750063007400200069006e00200077006800690063
00680020007400680069007300200066006f006e00740020006900730020
0069006e0063006c007500640065006400200074006f0020006400690073
0070006c0061007900200061006e00640020007000720069006e00740020
0063006f006e00740065006e0074002e00200059006f00750020006d0061
00790020006f006e006c0079002000280069002900200065006d00620065
00640020007400680069007300200066006f006e007400200069006e0020
0063006f006e00740065006e00740020006100730020007000650072006d
00690074007400650064002000620079002000740068006500200065006d
00620065006400640069006e006700200072006500730074007200690063
00740069006f006e007300200069006e0063006c00750064006500640020
0069006e0020007400680069007300200066006f006e0074003b00200061
006e006400200028006900690029002000740065006d0070006f00720061
00720069006c007900200064006f0077006e006c006f0061006400200074
00680069007300200066006f006e007400200074006f0020006100200070
00720069006e0074006500720020006f00720020006f0074006800650072
0020006f0075007400700075007400200064006500760069006300650020
0074006f002000680065006c00700020007000720069006e007400200063
006f006e00740065006e0074002e0068007400740070003a002f002f0077
00770077002e006d006900630072006f0073006f00660074002e0063006f
006d002f007400790070006f006700720061007000680079002f0066006f
006e00740073002f00640065006600610075006c0074002e006100730070
0078a92032303134204d6963726f736f667420436f72706f726174696f6e
2e20416c6c205269676874732052657365727665642e43616c6962726920
69732061206d6f6465726e2073616e732073657269662066616d696c7920
7769746820737562746c6520726f756e64696e6773206f6e207374656d73
20616e6420636f726e6572732e204974206665617475726573207265616c
206974616c6963732c20736d616c6c20636170732c20616e64206d756c74
69706c65206e756d6572616c20736574732e204974732070726f706f7274
696f6e7320616c6c6f77206869676820696d7061637420696e2074696768
746c7920736574206c696e6573206f662062696720616e6420736d616c6c
207465787420616c696b652e2043616c696272692773206d616e79206375
7276657320616e6420746865206e65772072617374657269736572207465
616d20757020696e206269676765722073697a657320746f207265766561
6c2061207761726d20616e6420736f6674206368617261637465722e5265
67756c61724d6963726f736f66743a2043616c6962726956657273696f6e
20352e383743616c6962726920697320612074726164656d61726b206f66
20746865204d6963726f736f66742067726f7570206f6620636f6d70616e
6965732e4c7563286173292064652047726f6f74687474703a2f2f777777
2e6d6963726f736f66742e636f6d2f7479706f6772617068792f6374666f
6e7473687474703a2f2f666f6e7466616272696b2e636f6d596f75206d61
7920757365207468697320666f6e74206173207065726d69747465642062
79207468652045554c4120666f72207468652070726f6475637420696e20
7768696368207468697320666f6e7420697320696e636c7564656420746f
20646973706c617920616e64207072696e7420636f6e74656e742e20596f
75206d6179206f6e6c792028692920656d626564207468697320666f6e74
20696e20636f6e74656e74206173207065726d6974746564206279207468
6520656d62656464696e67207265737472696374696f6e7320696e636c75
64656420696e207468697320666f6e743b20616e6420286969292074656d
706f726172696c7920646f776e6c6f6164207468697320666f6e7420746f
2061207072696e746572206f72206f74686572206f757470757420646576
69636520746f2068656c70207072696e7420636f6e74656e742e68747470
3a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f6772617068
792f666f6e74732f64656661756c742e61737078000000>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[2973 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> GFNBAA+Calibri AddT42Char 
2 2870 3416 <000100e6006a04b7044f00190015b714130607000d1407002fc4d4cd012f
cdd4cd313001220e0215112311343e0233321e0215112311342e0202c848
7f5f3884558ab05a5db08853843c648303d131659a69fe3201cf8ac98340
4083c98afe3101ce66996733>GFNBAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>GFNBAA+Calibri AddT42Char 
GFNBAA+Calibri /CharStrings get begin
/space 3 def
/intersection 3416 def
end
GFNBAA+Calibri /Encoding get
dup 32 /space put
dup 127 /intersection put
pop
end
%ADOEndSubsetFont
/HEQPQM+Calibri /GFNBAA+Calibri findfont ct_VMDictPut
/HEQPQM+Calibri*1 
[32{/.notdef}rp /space 94{/.notdef}rp /intersection 128{/.notdef}rp]
HEQPQM+Calibri nf
HEQPQM+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
292.362 458.017 mo
(\177 )
[13.9139 0 ]xsh
%ADOBeginSubsetFont: QJJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQL+Calibri gcheck setglobal} if
2 12476 898 <00010056febe02440580004f001d400d3f3f1dc813130834db264adb0800
2fed2fed12392fed393d2f313001140e0223060623222e023535342e0227
2e0335343e023736363535343e0233321617321e0215140e022307220e02
1515140e02071e031515141e023317321e02024404090c06121b13435632
1211233727090c070403070c094a4913335542131912070d090404090d08
291822150b10294434344429100a1521172a090e0904feff10170d080401
2b55806ace44543f270402070e170f10160f0602087f7ca16980562b0104
070e1710111710060111315659924967523b0b0a3b53664abe5856311201
060f1700>HEQPQL+Calibri AddT42Char 
HEQPQL+Calibri /CharStrings get begin
/braceleft 898 def
end
HEQPQL+Calibri /Encoding get
dup 123 /braceleft put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQL+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two 
10{/.notdef}rp /equal 18{/.notdef}rp /P 4{/.notdef}rp /U 11{/.notdef}rp /a 
7{/.notdef}rp /i 4{/.notdef}rp /n /o 4{/.notdef}rp /t /u 
5{/.notdef}rp /braceleft 132{/.notdef}rp]
HEQPQL+Calibri nf
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
310.909 458.017 mo
({)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
317.172 458.017 mo
(a)sh
%ADOBeginSubsetFont: QJJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQL+Calibri gcheck setglobal} if
2 12072 853 <0001002afede017300e0001b000ab20b171c0010d4cd313025140e020707
0e0323222e02371335343e0233321e020173060e171189050d1319131117
0a0104850b18241a1924170b8f1f342e2d19ce070a080303070c08011380
1b20100606102000>HEQPQL+Calibri AddT42Char 
HEQPQL+Calibri /CharStrings get begin
/comma 853 def
end
HEQPQL+Calibri /Encoding get
dup 44 /comma put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQL+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 4{/.notdef}rp 
/one /two 10{/.notdef}rp /equal 18{/.notdef}rp /P 4{/.notdef}rp /U 
11{/.notdef}rp /a 7{/.notdef}rp /i 4{/.notdef}rp /n /o 4{/.notdef}rp 
/t /u 5{/.notdef}rp /braceleft 132{/.notdef}rp]
HEQPQL+Calibri nf
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
326.752 458.017 mo
(,)sh
%ADOBeginSubsetFont: QJJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQL+Calibri gcheck setglobal} if
2 4278 271 <00020099ffed03d50571002a003d0085b53f3f010a2136b8fff6b30c014d
36b8fff0b30d014d36b8ffe8b30b014d36b8fff0b40f10014c36b801f840
1b152b120c014d2b200d014d2b180b014d2b1810014d2b100f014d2bb802
0a400900150a363521040530b80105b6264a1b46104c39b80105b1054d00
3fed3f3f3fed121739012fd4e12b2b2b2b2b10e12b2b2b2b323931305d01
140e0223222e022715140e0223222e023511343e0233321e0215113e0333
321e0207342e0223220e020711161633323e0203d53363905d2b49464627
08121b15141c12060713201819201208284b484828628b5728ae15345640
203e404527447c433e58371901e775bb844611263a296e080c070404070c
080538080c080404080c08fde5293823104e83b0754582643d122a4232fe
9953573c637b>HEQPQL+Calibri AddT42Char 
HEQPQL+Calibri /CharStrings get begin
/b 271 def
end
HEQPQL+Calibri /Encoding get
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQL+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 4{/.notdef}rp 
/one /two 10{/.notdef}rp /equal 18{/.notdef}rp /P 4{/.notdef}rp /U 
11{/.notdef}rp /a /b 6{/.notdef}rp /i 4{/.notdef}rp /n /o 
4{/.notdef}rp /t /u 5{/.notdef}rp /braceleft 132{/.notdef}rp]
HEQPQL+Calibri nf
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
331.734 458.017 mo
(b)sh
%ADOBeginSubsetFont: QJJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQL+Calibri gcheck setglobal} if
2 12720 899 <00010075febe026505800051001d400d29294dc605051034db421edb1000
2fed2fed12392fed393d2f313001140e02070e031515140e022322262722
2e0235343e023337323e023535343e02372e033535342e022327222e0235
343e0233363633321e021515141e0217321e02026503070c082a38230e14
325641131a14070c080606090c072b1822160a11284533334528110a1521
17280b0f0a0405090d09111a134256321311233727080c0803023710160e
07010433506348a16980562b0203080d1710111710060112305659924a74
64480b0a2c43584abe5955311201060f171210170e0704012b55806ace44
452e1905080f1500>HEQPQL+Calibri AddT42Char 
HEQPQL+Calibri /CharStrings get begin
/braceright 899 def
end
HEQPQL+Calibri /Encoding get
dup 125 /braceright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQL+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 4{/.notdef}rp 
/one /two 10{/.notdef}rp /equal 18{/.notdef}rp /P 4{/.notdef}rp /U 
11{/.notdef}rp /a /b 6{/.notdef}rp /i 4{/.notdef}rp /n /o 
4{/.notdef}rp /t /u 5{/.notdef}rp /braceleft /.notdef /braceright 130{/.notdef}rp]
HEQPQL+Calibri nf
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
342.224 458.017 mo
(})sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
203.94 481.976 mo
(=)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
213.904 481.976 mo
(in)
[4.27049 0 ]xsh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
228.992 481.976 mo
(\()sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
235.042 481.976 mo
(P)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
245.361 481.976 mo
(1)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
255.467 481.976 mo
(\) )
[6.44125 0 ]xsh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
266.072 481.976 mo
(U )
[12.81 0 ]xsh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
283.409 481.976 mo
({)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
289.658 481.976 mo
(a)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
299.237 481.976 mo
(})sh
151.573 428.865 mo
151.573 429.464 li
150.918 429.464 li
150.918 468.119 li
1.5 lw
1 lc
1 lj
gsave
[1.42341 0 0 -1.424 -12.134 512.132 ]ct
@
grestore newpath
156.64 466.688 mo
150.918 478.137 li
145.196 466.688 li
156.64 466.688 li
ef
171.486 507.212 mo
131.986 507.212 li
131.986 473.682 li
148.691 473.682 li
150.918 478.137 li
153.145 473.682 li
171.486 473.682 li
171.486 507.212 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 249.614 506.916 ]ct
[41.6348 0 0 35.244 -118.695 -.941288 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 39 
/H 33 
/M[39 0 0 -33 0 33 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcPZJr;kaT!s&E&!ODdb!!<6%!Wr?(rrW3$iW&rZrW<6&!WW8]!!**#r;lZnl2UechZ+/f
!<N?-#7(SA#R1J9"9JVh!!WH(!!*3+"TAQ-!s8Z.!qH?b!!!'!!!!&s!!!&:!"]/4!s]/A%hTEd&J#<Y
#R(@r!!!'1!<WN1#RLeE#RCS;"9\hg!!30$!WE)u!<E0$g&M*Sm/ROq"9o2C&eu6%)]K\5#8S!a$O?h9
!U]pj!s8`4$2t;?%LrpW$jm4C"p"c+mJmFl!W`?'!!3'!"9AN'!!1OKnc/pr!s]2G(E4A;r>u=g*ul+3
%g`@?!Up'o!WrT3$P!XWr=0,F%h/pS#R(51!UKdh!<<*#!W2p$!<<*#!!;cmec6!W"9o;J)''eC,5i_m
+sJ0Q*#0"l"9S)n#Qk/5#n.:R&.ndP#nRX[&.JsQ"p"eq!!E<&!<<*$!!*,t!<3)t!!!)D!!rZ-#7V@c
*ZuXNq'-(f*uu+-#m9_u#QY)7$4RLV&.n[M#8%LW%L`RG!q$$g!WE'!!Vl]q!WE'!!S@AP!qZHs!X9#G
)B^3r,6oD7*>K(j"9J/q"p+o2$4RLWoaqB>%LrgO"9\2p!s&B&!Up*g!RC`N!!*0-%iHH5o-4G`*ukt'
"Tn>s"Tei4$kEp@&I&dV%13:@!qQBo!<<*#mf<@gli?&G"Tei9'ceIf,6f>6)%d,V!VZQs!WiQ6%e(&6
&.]0U"Tn>s"9AK'!!2]lrW)s!bQ%hJ":,SW+!U2!"<\^!$3p5)"p"f/#n.=Un.>g7%LE7@!;?Hn!WE*!
!U]pf!S@AP!r)a!!<WWA*$F\p"X5'+%L3(0!!E<*#Rq=5&HiXU$O?k,!<3)f!<*!#!!!&H!!EK7'cnRs
,P*,`*uY^s"9J8t"9\o9%M8%?":bkH"U"AsrrMKe!s&B%!VcWp!pp!V!!NE.%2U-2mNVlX*"iS\!Vl^!
!WrT6&.n7A":kqJ"9J2rrrMEc!!3#udJsFP#7_Rm,4?`\+sJ$A$NgG*!!NE-#7D%Rmh#^7&.T$P!VZQo
!<N6%!U]sf!R1TJ!X9,O+<p8!"sP63'F=jBq#CR"!s]2E&Gm(4&Hr^W%LN=>o`5!mmK!7fbl@nK"q;@i
,4QoW,6]20'++gBq#CR"!sK&C&FL,5%h/gJ!VZQq!W`>e!!!&N!;QTt"q24f+mpQY*uY^s"9J8t"9\o9
%hS.@"V(tI"Tnf"!!!&c!!E<'!!!&p!!33%!8RVY!<WWA*$Obq"X5!)%gN11!!<6)#S$26":u(P#R0i#
rW2iqp&G6s!!!$"!RUlO!<`Z=)'C-m,6T,/'FP'<!!WH+":#AH&Fg>9&J#<X"Te;sqZ6-c!s&B%!nmVS
!quZu!X/uI*$Xqu#9k?7(_6lT!WE)q!!E?+"q(n1&cN=D$jQq<oDeso!!*,k!!WH)!!!$"!RC`I!<`Z1
%i??1o-4G`*ubk$"TnQ$qZ$d%":,DG&+^A;&.T-T"U"o"!!!'!!!!&j!!<6&!!17C!s/T3&HWgl,5*5e
+sJ*K'b1EN!VHEs!W`E0$kEpC&I/jY%LidN!sA,p!!<*!!!2cn!s&E&!WE'!!TjCG!!iT,"q2.`*[)a&
,6f;6*#/ti"7lKu!<<3+#n%4T&GQhA&.f9X#6b/!!!WH(!<E6%!VHEp!<<-#f`2!Ro)KR-":#>J(`a_A
+sJ6V+sJ0P*ubq)#m:>"!"/l4"pkYI&.]<`&J>!R#7_7S$O6h<!r)cl!!**#rW2uu!!3#u!!0n9('+OC
$P*sj*?Q@G+!;[I*#K=u#Qk,/n,NIk"VV+G$O[FT%hK3^%hB*X#mCJ6!Whcj$ipA/!<E6%!!*'#!!3'!
rrL(=$NU;5#Rq@[(Dn#.)$h&o'+PBT!rrAi!##A9"UGDA$OdFO$k*IM#6t>3!!29`!s&B%!n%&M!WW5i
!!iT+!WrW4$OmUF%gWXR$3gV7!<</f!!33'"9&K'#71Y@"p>#/!<<*#kPt\c!!*,u!!!)k!9X=^!qu\F
~>

%%EndBinary
grestore
np
150.918 478.137 mo
148.691 473.682 li
153.145 473.682 li
150.918 478.137 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 249.614 506.916 ]ct
[6.40536 0 0 6.408 -101.614 27.8947 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!**$!<<0&"9\i/~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!**#!<<*#!s8W*~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$"!<E3%~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8N#srr;ooqtp9g~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
138.107 490.953 mo
138.107 483.874 143.844 478.137 150.918 478.137 cv
157.992 478.137 163.729 483.874 163.729 490.953 cv
163.729 498.031 157.992 503.769 150.918 503.769 cv
143.844 503.769 138.107 498.031 138.107 490.953 cv
cp
1 /0 /CSD get_res sepcs
1 sep
ef
138.107 490.953 mo
138.107 483.874 143.843 478.137 150.918 478.137 cv
157.992 478.137 163.729 483.874 163.729 490.953 cv
163.729 498.031 157.992 503.769 150.918 503.769 cv
143.843 503.769 138.107 498.031 138.107 490.953 cv
cp
.75075 lw
2 lc
0 lj
gsave
[1.42341 0 0 -1.424 -12.134 512.132 ]ct
@
grestore newpath
%ADOBeginSubsetFont: QJJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQL+Calibri gcheck setglobal} if
2 6300 364 <00010099fffa037c057100340095400c3f3601293101314012014d31b8ff
d0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0b30b014d
31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8fff6b30c01
4d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c014d0016
220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f10f12b2b
2b2b32e02b2b2b2b2b31305d5d25140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>HEQPQL+Calibri AddT42Char 
2 6608 367 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>HEQPQL+Calibri AddT42Char 
HEQPQL+Calibri /CharStrings get begin
/k 364 def
/l 367 def
end
HEQPQL+Calibri /Encoding get
dup 107 /k put
dup 108 /l put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQL+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 4{/.notdef}rp 
/one /two 10{/.notdef}rp /equal 18{/.notdef}rp /P 4{/.notdef}rp /U 
11{/.notdef}rp /a /b 6{/.notdef}rp /i /.notdef /k /l 
/.notdef /n /o 4{/.notdef}rp /t /u 5{/.notdef}rp /braceleft 
/.notdef /braceright 130{/.notdef}rp]
HEQPQL+Calibri nf
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
277.103 188.884 mo
(kill)
[8.57477 5.34384 4.30762 0 ]xsh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
299.949 188.884 mo
(\()sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
305.999 188.884 mo
(P)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
316.318 188.884 mo
(1)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
326.467 188.884 mo
(\) = )
[6.3801 4.267 9.65167 0 ]xsh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
351.505 188.884 mo
({)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
357.782 188.884 mo
(a)sh
HEQPQL+Calibri*1 [20.3192 0 0 -20.3276 0 0 ]msf
367.348 188.884 mo
(})sh
%ADOBeginSubsetFont: QJJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HEQPQL+Calibri gcheck setglobal} if
2 4886 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>HEQPQL+Calibri AddT42Char 
2 5208 336 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>HEQPQL+Calibri AddT42Char 
HEQPQL+Calibri /CharStrings get begin
/e 286 def
/g 336 def
end
HEQPQL+Calibri /Encoding get
dup 101 /e put
dup 103 /g put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HEQPQL+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 4{/.notdef}rp 
/one /two 10{/.notdef}rp /equal 18{/.notdef}rp /P 4{/.notdef}rp /U 
11{/.notdef}rp /a /b 2{/.notdef}rp /e /.notdef /g /.notdef 
/i /.notdef /k /l /.notdef /n /o 4{/.notdef}rp 
/t /u 5{/.notdef}rp /braceleft /.notdef /braceright 130{/.notdef}rp]
HEQPQL+Calibri nf
HEQPQL+Calibri*1 [20.3548 0 0 -20.3632 0 0 ]msf
278.712 381.513 mo
(gen)
[9.58694 9.70929 0 ]xsh
HEQPQL+Calibri*1 [20.3548 0 0 -20.3632 0 0 ]msf
308.561 381.513 mo
(\()sh
HEQPQL+Calibri*1 [20.3548 0 0 -20.3632 0 0 ]msf
314.61 381.513 mo
(P)sh
HEQPQL+Calibri*1 [20.3548 0 0 -20.3632 0 0 ]msf
324.93 381.513 mo
(2)sh
HEQPQL+Calibri*1 [20.3548 0 0 -20.3632 0 0 ]msf
335.079 381.513 mo
(\) = )
[6.3913 4.27448 9.60748 0 ]xsh
HEQPQL+Calibri*1 [20.3548 0 0 -20.3632 0 0 ]msf
360.088 381.513 mo
({)sh
HEQPQL+Calibri*1 [20.3548 0 0 -20.3632 0 0 ]msf
366.38 381.513 mo
(a)sh
HEQPQL+Calibri*1 [20.3548 0 0 -20.3632 0 0 ]msf
375.959 381.513 mo
(,)sh
HEQPQL+Calibri*1 [20.3548 0 0 -20.3632 0 0 ]msf
380.941 381.513 mo
(b)sh
HEQPQL+Calibri*1 [20.3548 0 0 -20.3632 0 0 ]msf
391.432 381.513 mo
(})sh
grestore
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
/HEQPQM+Calibri*1 uf
/HEQPQM+Calibri uf
/GFNBAA+Calibri uf
/HEQPQL+Calibri*1 uf
/HEQPQL+Calibri uf
/QJJAAA+Calibri uf
/HEQPQK+Consolas,Bold*1 uf
/HEQPQK+Consolas,Bold uf
/HIBBAA+Consolas,Bold uf
/HEQPQJ+Consolas,Bold*1 uf
/HEQPQJ+Consolas,Bold uf
/PBAAAA+Consolas,Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
